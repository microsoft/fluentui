import * as React from 'react';
import { makeMergeProps, resolveShorthandProps } from '@fluentui/react-utilities';
import { {{componentName}}Props, {{componentName}}ShorthandProps, {{componentName}}State } from './{{componentName}}.types';

/**
 * Array of all shorthand properties listed in {{componentName}}ShorthandProps
 */
export const {{camelCase componentName}}ShorthandProps: {{componentName}}ShorthandProps[] = [
  /* TODO add shorthand property names */
];

const mergeProps = makeMergeProps<{{componentName}}State>({ deepMerge: {{camelCase componentName}}ShorthandProps });

/**
 * Create the state required to render {{componentName}}.
 *
 * The returned state can be modified with hooks such as use{{componentName}}Styles,
 * before being passed to render{{componentName}}.
 *
 * @param props - props from this instance of {{componentName}}
 * @param ref - reference to root HTMLElement of {{componentName}}
 * @param defaultProps - (optional) default prop values provided by the implementing type
 */
export const use{{componentName}} = (
  props: {{componentName}}Props,
  ref: React.Ref<HTMLElement>,
  defaultProps?: {{componentName}}Props,
): {{componentName}}State => {
  const state = mergeProps(
    {
      ref,
    },
    defaultProps && resolveShorthandProps(defaultProps, {{camelCase componentName}}ShorthandProps),
    resolveShorthandProps(props, {{camelCase componentName}}ShorthandProps),
  );

  return state;
};
