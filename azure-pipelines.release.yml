pr: none
trigger: none

# Customize build number to include major version
# Example: v8_20201022.1
name: 'v8_$(Date:yyyyMMdd)$(Rev:.r)'

variables:
  - group: 'Github and NPM secrets'
  - template: .devops/templates/variables.yml
    parameters:
      skipComponentGovernanceDetection: false
  - name: tags
    value: production,externalfacing

schedules:
  # minute 0, hour 7 in UTC (11pm in UTC-8), any day of month, any month, days 1-5 of week (M-F)
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?tabs=yaml&view=azure-devops#supported-cron-syntax
  - cron: '0 7 * * 1-5'
    # will be 12am during daylight savings time unless trigger is updated
    displayName: 'Daily release (Sundary-Thursday at 11pm PST)'
    branches:
      include:
        - master

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows # We need windows because compliance task only run on windows.
    stages:
      - stage: main
        jobs:
          - job: Release
            pool:
              name: '1ES-Host-Ubuntu'
              image: '1ES-PT-Ubuntu-20.04'
              os: linux
            timeoutInMinutes: 90
            workspace:
              clean: all
            templateContext:
              outputParentDirectory: $(System.DefaultWorkingDirectory)
              outputs:
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/homepage
                  artifactName: homepage.htm
                  displayName: homepage.htm
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/packages/fluentui/docs/src/public
                  artifactName: demo-images
                  displayName: demo-images
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/oufr-version.txt
                  artifactName: oufr-version
                  displayName: oufr-version
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/site-manifests
                  artifactName: fabric-website-manifests
                  displayName: fabric-website-manifests
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/apps/public-docsite-resources/dist/demo
                  artifactName: fabric-website-resources
                  displayName: fabric-website-resources
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/apps/public-docsite/dist
                  artifactName: fabric-website
                  displayName: fabric-website
                - output: pipelineArtifact
                  targetPath: $(System.DefaultWorkingDirectory)/packages/react/dist
                  artifactName: fabric
                  displayName: fabric
                - output: pipelineArtifact
                  targetPath: $(Build.ArtifactStagingDirectory)/api
                  artifactName: api-json
                  displayName: api-json
            steps:
              - template: .devops/templates/tools.yml@self

              - script: |
                  git config user.name "Fluent UI Build"
                  git config user.email "fluentui-internal@service.microsoft.com"
                  git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/fluentui.git
                displayName: Authenticate git for pushes

              - task: Bash@3
                inputs:
                  filePath: yarn-ci.sh
                displayName: yarn

              - script: |
                  yarn generate-version-files
                displayName: Generate version files

              - script: |
                  yarn run:published build --production
                displayName: yarn build

              # --only makes it only run tests (otherwise due to the missing --production arg, lage would re-run the build)
              # https://github.com/microsoft/fluentui/issues/21686
              - script: |
                  yarn run:published test --only
                displayName: yarn [test]

              - script: |
                  yarn run:published lint --only
                displayName: yarn lint

              - script: |
                  yarn run:published bundle --only --production
                displayName: yarn bundle

              - script: |
                  yarn publish:beachball -n $(npmToken) --config scripts/beachball/release-v8.config.js
                  git reset --hard origin/master
                env:
                  GITHUB_PAT: $(githubPAT)
                displayName: Publish changes and bump versions

              - script: |
                  echo Making $(Build.ArtifactStagingDirectory)/api
                  mkdir -p $(Build.ArtifactStagingDirectory)/api
                  cp packages/*/dist/*.api.json $(Build.ArtifactStagingDirectory)/api
                displayName: Copy api.json files to artifact staging directory

              - script: |
                  oufrVersion=$(node -p -e "require('./packages/react/package.json').version")
                  echo "OUFR Version: $oufrVersion"
                  echo $oufrVersion > oufr-version.txt
                  echo "##vso[task.setvariable variable=oufrVersion;]$oufrVersion"
                displayName: 'Set oufrVersion variable'

              # create-site-manifests is a script defined in @fluentui/public-docsite-setup.
              # It generates manifest files used to load the current version on developer.microsoft.com/fluentui.
              - script: |
                  yarn create-site-manifests ./packages/react
                displayName: 'Generate website manifests'

              # Generate the homepage.htm file used to load developer.microsoft.com/fluentui. Note that the
              # generated file must be manually checked in to an internal repo, it's just generated as a build
              # artifact for convenience and tracking.
              - script: |
                  node ./packages/public-docsite-setup/scripts/generateHomepage ./homepage
                displayName: 'Generate homepage.htm'

              # Run this near the end because it's more likely to fail than the artifact upload tasks, and its
              # failure doesn't need to block anything else
              - script: |
                  node -r ./scripts/ts-node/register ./scripts/update-release-notes/index.ts --token=$(githubPAT) --apply --debug
                displayName: 'Update github release notes'

              - template: .devops/templates/cleanup.yml@self
                parameters:
                  checkForModifiedFiles: false
