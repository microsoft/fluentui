pr: none
trigger: none

# Customize build number to include major version
# Example: v6_20190626.1
name: 'v6_$(Date:yyyyMMdd)$(Rev:.r)'

variables:
  - group: 'Github and NPM secrets'

pool:
  vmImage: 'Ubuntu 20.04'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      git config user.name "UI Fabric Build"
      git config user.email "fluentui-internal@service.microsoft.com"
      git remote set-url origin https://$(githubUser):$(githubPAT)@github.com/microsoft/fluentui.git
    displayName: Authenticate git for pushes

  - script: |
      node common/scripts/install-run-rush.js install --bypass-policy
    displayName: rush install

  - script: |
      npm run generate-version-files
    displayName: npm run generate-version-files

  - script: |
      node common/scripts/install-run-rush.js build --production --verbose
    displayName: rush build (Create production build)

  - script: |
      echo Making $(Build.ArtifactStagingDirectory)/api &&
      mkdir -p $(Build.ArtifactStagingDirectory)/api &&
      cp packages/*/dist/*.api.json $(Build.ArtifactStagingDirectory)/api
    displayName: Copy api.json files to artifact staging directory

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/api
      artifactName: 'api-json'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: api.json'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: apps/fabric-website/dist
      artifactName: 'fabric-website'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: Fabric Website'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: packages/office-ui-fabric-react/dist
      artifactName: 'fabric'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: Fabric'

  - script: |
      npm run publish:beachball -- -b origin/6.0 -t lts-6 -n $(npmToken) --access public -y
    displayName: 'Publish Change Requests and Bump Versions'

  # TODO: updateReleaseNotes script results in too many calls to the github API causing a timeout, needs to be refactored
  # - script: |
  #     node scripts/updateReleaseNotes.js --token=$(githubPAT) --apply --debug
  #   displayName: 'Update github release notes'

  - script: |
      oufrVersion=$(node -p -e "require('./packages/office-ui-fabric-react/package.json').version") &&
      echo "OUFR Version: $oufrVersion" &&
      echo $oufrVersion > oufr-version.txt &&
      echo "##vso[task.setvariable variable=oufrVersion;]$oufrVersion"
    displayName: 'Set OUFR Version Task Variable'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: ./oufr-version.txt
      artifactName: 'oufr-version'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: oufr-version.txt'

  # create-site-manifests is a script defined in @fluentui/public-docsite-setup.
  # It generates manifest files used to load the current version on developer.microsoft.com/fluentui.
  - script: |
      npx create-site-manifests ../../packages/office-ui-fabric-react
    workingDirectory: apps/fabric-website
    displayName: 'Generate website manifests'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: ./apps/fabric-website/site-manifests
      artifactName: 'fabric-website-manifests'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: Website manifests'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: apps/fabric-website-resources/dist
      artifactName: 'fabric-website-resources'
      publishLocation: 'Container'
    displayName: 'Publish Artifact: Fabric Website Resources'

  # SBOM generation disabled until SBOM tool can properly handle complex pnpm projects
  # - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  #   displayName: ðŸ“’ Generate Manifest
  #   inputs:
  #     BuildDropPath: $(System.DefaultWorkingDirectory)
  #     Verbosity: Verbose

  # - task: PublishPipelineArtifact@1
  #   displayName: ðŸ“’ Publish Manifest
  #   inputs:
  #     artifactName: SBom-$(System.JobAttempt)
  #     targetPath: $(System.DefaultWorkingDirectory)/_manifest
