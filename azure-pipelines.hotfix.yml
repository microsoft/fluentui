pr: none

trigger: none

name: '$(targetNpmVersion) ($(Rev:r))'

variables:
  - group: 'Github and NPM secrets'

pool:
  vmImage: 'Ubuntu 20.04'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      node -e "if('$(targetNpmVersion)' === '') throw new Error('targetNpmVersion is not specified');"
    displayName: 'Checking for targetNpmVersion variable'

  - script: |
      npm install semver
      node -e "let semver = require('semver');if(semver.valid('$(targetNpmVersion)') === null){ throw new Error('Invalid version specified'); }"
    displayName: 'Check targetNpmVersion is valid semver'

  - script: |
      node common/scripts/install-run-rush.js build --production --verbose
    displayName: rush build (Create production build)

  - script: |
      npm version $(targetNpmVersion)
    workingDirectory: 'packages/office-ui-fabric-react'
    displayName: 'Manually set package version'

  - script: |
      npm pack
    displayName: 'Create tarball'
    workingDirectory: 'packages/office-ui-fabric-react'

  - script: |
      npm publish packages/office-ui-fabric-react/office-ui-fabric-react-$(targetNpmVersion).tgz --tag hf5 --//registry.npmjs.org/:_authToken=$(npmToken)
    displayName: Publish new version

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: ðŸ“’ Generate Manifest
    inputs:
      BuildDropPath: $(System.DefaultWorkingDirectory)

  - task: PublishPipelineArtifact@1
    displayName: ðŸ“’ Publish Manifest
    inputs:
      artifactName: SBom-$(System.JobAttempt)
      targetPath: $(System.DefaultWorkingDirectory)/_manifest
