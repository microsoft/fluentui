pr: none

trigger: none

name: '$(targetNpmVersion) ($(Rev:r))'

variables:
  - template: .devops/templates/variables.yml
  - group: InfoSec-SecurityResults
  - name: tags
    value: production,externalfacing

jobs:
  - template: .devops/templates/compliance-job.yml

  - job: Release
    dependsOn: Compliance
    pool: '1ES-Host-Ubuntu'
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - script: |
          node -e "if('$(targetNpmVersion)' === '') throw new Error('targetNpmVersion is not specified');"
        displayName: 'Checking for targetNpmVersion variable'

      - script: |
          npm install semver
          node -e "let semver = require('semver');if(semver.valid('$(targetNpmVersion)') === null){ throw new Error('Invalid version specified'); }"
        displayName: 'Check targetNpmVersion is valid semver'

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - script: |
          npm version $(targetNpmVersion)
        workingDirectory: 'packages/react'
        displayName: 'Manually set package version'

      - script: |
          yarn buildto @fluentui/react --production
        displayName: yarn build to FUIR (Create production build)

      - script: yarn workspace @fluentui/react bundle --production
        displayName: yarn bundle FUIR

      - script: |
          npm pack
        displayName: 'Create tarball'
        workingDirectory: 'packages/react'

      - script: |
          npm publish packages/react/react-$(targetNpmVersion).tgz --tag hf8 --//registry.npmjs.org/:_authToken=$(npmToken)
        displayName: Publish new version

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: ðŸ“’ Publish Manifest
        inputs:
          artifactName: SBom-$(System.JobAttempt)
          targetPath: $(System.DefaultWorkingDirectory)/_manifest

      - template: .devops/templates/cleanup.yml
        parameters:
          checkForModifiedFiles: false
