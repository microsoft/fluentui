// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Tabs.AlwaysRender.Example.tsx correctly 1`] = `
<div>
  <div
    className=
        ms-Toggle
        is-enabled
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          align-items: center;
          display: flex;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          margin-bottom: 8px;
        }
  >
    <label
      className=
          ms-Label
          ms-Toggle-label
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            box-shadow: none;
            box-sizing: border-box;
            color: #323130;
            display: inline-block;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 0px;
            margin-left: 16px;
            margin-right: 0px;
            margin-top: 0px;
            order: 1;
            overflow-wrap: break-word;
            padding-bottom: 5px;
            padding-left: 0;
            padding-right: 0;
            padding-top: 5px;
            word-break: break-word;
            word-wrap: break-word;
          }
      htmlFor="Toggle0"
      id="Toggle0-label"
    >
      Always render children
    </label>
    <div
      className=
          ms-Toggle-innerContainer
          {
            display: flex;
            position: relative;
          }
    >
      <button
        aria-checked={false}
        aria-labelledby="Toggle0-label"
        checked={false}
        className=
            ms-Toggle-background
            {
              align-items: center;
              background: #ffffff;
              border-radius: 10px;
              border: 1px solid #605e5c;
              box-sizing: border-box;
              cursor: pointer;
              display: flex;
              font-size: 20px;
              height: 20px;
              outline: transparent;
              padding-bottom: 0;
              padding-left: 3px;
              padding-right: 3px;
              padding-top: 0;
              position: relative;
              transition: all 0.1s ease;
              width: 40px;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 1px solid #ffffff;
              bottom: -2px;
              content: "";
              left: -2px;
              outline: 1px solid #605e5c;
              position: absolute;
              right: -2px;
              top: -2px;
              z-index: 1;
            }
            &:hover {
              border-color: #323130;
            }
            &:hover .ms-Toggle-thumb {
              background-color: #201f1e;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover .ms-Toggle-thumb {
              border-color: Highlight;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
              border-color: Highlight;
            }
        data-is-focusable={true}
        data-ktp-target={true}
        id="Toggle0"
        onChange={[Function]}
        onClick={[Function]}
        role="switch"
        type="button"
      >
        <span
          className=
              ms-Toggle-thumb
              {
                background-color: #605e5c;
                border-color: transparent;
                border-radius: 50%;
                border-style: solid;
                border-width: 6px;
                box-sizing: border-box;
                display: block;
                height: 12px;
                transition: all 0.1s ease;
                width: 12px;
              }
        />
      </button>
    </div>
  </div>
  <div
    aria-label="Separately Rendered Content Tabs Example"
    role="toolbar"
  >
    <div
      className=
          ms-FocusZone
          ms-Tabs
          &:focus {
            outline: none;
          }
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            box-shadow: none;
            box-sizing: border-box;
            color: #0078d4;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            margin-bottom: 0px;
            margin-left: 0px;
            margin-right: 0px;
            margin-top: 0px;
            padding-bottom: 0px;
            padding-left: 0px;
            padding-right: 0px;
            padding-top: 0px;
            position: relative;
            white-space: nowrap;
          }
      data-focuszone-id="FocusZone2"
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDownCapture={[Function]}
      role="tablist"
    >
      <button
        aria-selected={true}
        className=
            ms-Button
            ms-Button--action
            ms-Button--command
            ms-Tabs-tab
            is-selected
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              background-color: transparent;
              border-radius: 0px;
              border: 0px;
              box-sizing: border-box;
              color: #323130;
              cursor: pointer;
              display: inline-block;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 600;
              height: 44px;
              line-height: 44px;
              margin-right: 8px;
              outline: transparent;
              padding-bottom: 0;
              padding-left: 8px;
              padding-right: 8px;
              padding-top: 0;
              position: relative;
              text-align: center;
              text-decoration: none;
              user-select: none;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 0px;
              bottom: 2px;
              content: attr(data-content);
              left: 2px;
              outline: 1px solid #605e5c;
              position: relative;
              right: 2px;
              top: 2px;
              z-index: 1;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
              bottom: -2px;
              left: -2px;
              outline-color: ButtonText;
              right: -2px;
              top: -2px;
            }
            &:active > * {
              left: 0px;
              position: relative;
              top: 0px;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
              border-color: Window;
              color: Highlight;
            }
            &:hover {
              background-color: #f3f2f1;
              color: #201f1e;
              cursor: pointer;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
              color: Highlight;
            }
            &:hover .ms-Button-icon {
              color: #0078d4;
            }
            &:focus {
              outline: none;
            }
            &:active {
              background-color: #edebe9;
              color: #201f1e;
            }
            &:active .ms-Button-icon {
              color: #004578;
            }
            .ms-Fabric--isFocusVisible &:focus {
              outline: 1px solid #605e5c;
            }
            &:before {
              background-color: #0078d4;
              bottom: 0px;
              content: "";
              height: 2px;
              left: 8px;
              position: absolute;
              right: 8px;
              transition: left 0.267s cubic-bezier(.1,.25,.75,.9),
                                    right 0.267s cubic-bezier(.1,.25,.75,.9);
            }
            &:after {
              color: transparent;
              content: attr(data-content);
              display: block;
              font-weight: 700;
              height: 1px;
              overflow: hidden;
              visibility: hidden;
            }
            &[data-is-overflowing='true'] {
              display: none;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){&:before {
              background-color: Highlight;
            }
            &:hover::before {
              left: 0px;
              right: 0px;
            }
        data-content="Expensive component #1"
        data-is-focusable={true}
        id="Tabs1-Tab0"
        name="Expensive component #1"
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        role="tab"
        type="button"
      >
        <span
          className=
              ms-Button-flexContainer
              {
                align-items: center;
                display: flex;
                flex-wrap: nowrap;
                height: 100%;
                justify-content: flex-start;
              }
          data-automationid="splitbuttonprimary"
        >
          <span
            className=
                ms-Tabs-tabContent
                {
                  flex: 0 1 100%;
                }
                & > *  {
                  margin-left: 4px;
                }
                & > *:first-child {
                  margin-left: 0px;
                }
          >
            <span
              className=
                  ms-Tabs-text
                  {
                    display: inline-block;
                    vertical-align: top;
                  }
            >
               
              Expensive component #1
            </span>
          </span>
        </span>
      </button>
      <button
        aria-selected={false}
        className=
            ms-Button
            ms-Button--action
            ms-Button--command
            ms-Tabs-tab
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              background-color: transparent;
              border-radius: 0px;
              border: 0px;
              box-sizing: border-box;
              color: #323130;
              cursor: pointer;
              display: inline-block;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              height: 44px;
              line-height: 44px;
              margin-right: 8px;
              outline: transparent;
              padding-bottom: 0;
              padding-left: 8px;
              padding-right: 8px;
              padding-top: 0;
              position: relative;
              text-align: center;
              text-decoration: none;
              user-select: none;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 0px;
              bottom: 2px;
              content: attr(data-content);
              left: 2px;
              outline: 1px solid #605e5c;
              position: relative;
              right: 2px;
              top: 2px;
              z-index: 1;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
              bottom: -2px;
              left: -2px;
              outline-color: ButtonText;
              right: -2px;
              top: -2px;
            }
            &:active > * {
              left: 0px;
              position: relative;
              top: 0px;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
              border-color: Window;
            }
            &:hover {
              background-color: #f3f2f1;
              color: #201f1e;
              cursor: pointer;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
              color: Highlight;
            }
            &:hover .ms-Button-icon {
              color: #0078d4;
            }
            &:focus {
              outline: none;
            }
            &:active {
              background-color: #edebe9;
              color: #201f1e;
            }
            &:active .ms-Button-icon {
              color: #004578;
            }
            .ms-Fabric--isFocusVisible &:focus {
              outline: 1px solid #605e5c;
            }
            &:before {
              background-color: transparent;
              bottom: 0px;
              content: "";
              height: 2px;
              left: 8px;
              position: absolute;
              right: 8px;
              transition: left 0.267s cubic-bezier(.1,.25,.75,.9),
                                    right 0.267s cubic-bezier(.1,.25,.75,.9);
            }
            &:after {
              color: transparent;
              content: attr(data-content);
              display: block;
              font-weight: 700;
              height: 1px;
              overflow: hidden;
              visibility: hidden;
            }
            &[data-is-overflowing='true'] {
              display: none;
            }
        data-content="Expensive component #2"
        data-is-focusable={true}
        id="Tabs1-Tab1"
        name="Expensive component #2"
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        role="tab"
        type="button"
      >
        <span
          className=
              ms-Button-flexContainer
              {
                align-items: center;
                display: flex;
                flex-wrap: nowrap;
                height: 100%;
                justify-content: flex-start;
              }
          data-automationid="splitbuttonprimary"
        >
          <span
            className=
                ms-Tabs-tabContent
                {
                  flex: 0 1 100%;
                }
                & > *  {
                  margin-left: 4px;
                }
                & > *:first-child {
                  margin-left: 0px;
                }
          >
            <span
              className=
                  ms-Tabs-text
                  {
                    display: inline-block;
                    vertical-align: top;
                  }
            >
               
              Expensive component #2
            </span>
          </span>
        </span>
      </button>
    </div>
    <div
      aria-hidden={false}
      aria-labelledby="Tabs1-Tab0"
      className=

          &[hidden] {
            display: none;
          }
      hidden={false}
      role="tabpanel"
    >
      <div>
        <div>
          Mounting...
        </div>
        Component #1
      </div>
    </div>
  </div>
</div>
`;
