// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Button.Compound.Example.tsx correctly 1`] = `
<div
  className=
      ms-Stack
      {
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        height: auto;
        width: auto;
      }
      & > * {
        text-overflow: ellipsis;
      }
      & > *:not(:first-child) {
        margin-left: 40px;
      }
      & > *:not(.ms-StackItem) {
        flex-shrink: 1;
      }
>
  <button
    aria-describedby="id__1"
    aria-labelledby="id__0"
    className=
        ms-Button
        ms-Button--compound
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background-color: #ffffff;
          border-radius: 2px;
          border: 1px solid #8a8886;
          box-sizing: border-box;
          color: #323130;
          cursor: pointer;
          display: inline-block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          height: auto;
          max-width: 280px;
          min-height: 72px;
          outline: transparent;
          padding-bottom: 16px;
          padding-left: 12px;
          padding-right: 12px;
          padding-top: 16px;
          position: relative;
          text-align: center;
          text-decoration: none;
          user-select: none;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: 1px solid transparent;
          bottom: 2px;
          content: "";
          left: 2px;
          outline: 1px solid #605e5c;
          position: absolute;
          right: 2px;
          top: 2px;
          z-index: 1;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
          bottom: -2px;
          left: -2px;
          outline-color: ButtonText;
          right: -2px;
          top: -2px;
        }
        &:active > * {
          left: 0px;
          position: relative;
          top: 0px;
        }
        &:hover {
          background-color: #f3f2f1;
          color: #201f1e;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
          border-color: Highlight;
          color: Highlight;
        }
        &:hover .ms-Button-description {
          color: #201f1e;
        }
        &:active {
          background-color: #edebe9;
          color: #201f1e;
        }
        &:active .ms-Button-description {
          color: inherit;
        }
    data-is-focusable={true}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    type="button"
  >
    <span
      className=
          ms-Button-flexContainer
          {
            align-items: flex-start;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            height: 100%;
            justify-content: center;
            margin-bottom: ;
            margin-left: ;
            margin-right: ;
            margin-top: ;
            min-width: 100%;
          }
      data-automationid="splitbuttonprimary"
    >
      <span
        className=
            ms-Button-textContainer
            {
              display: block;
              flex-grow: 1;
              text-align: left;
            }
      >
        <span
          className=
              ms-Button-label
              {
                display: block;
                font-weight: 600;
                line-height: 100%;
                margin-bottom: 5px;
                margin-left: 0;
                margin-right: 0;
                margin-top: 0;
              }
          id="id__0"
        >
          Standard
        </span>
        <span
          className=
              ms-Button-description
              {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #605e5c;
                display: block;
                font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                font-size: 12px;
                font-weight: 400;
                line-height: 100%;
              }
          id="id__1"
        >
          This is the secondary text.
        </span>
      </span>
    </span>
  </button>
  <button
    aria-describedby="id__4"
    aria-labelledby="id__3"
    className=
        ms-Button
        ms-Button--compoundPrimary
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background-color: #0078d4;
          border-radius: 2px;
          border: 1px solid #0078d4;
          box-sizing: border-box;
          color: #ffffff;
          cursor: pointer;
          display: inline-block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          height: auto;
          max-width: 280px;
          min-height: 72px;
          outline: transparent;
          padding-bottom: 16px;
          padding-left: 12px;
          padding-right: 12px;
          padding-top: 16px;
          position: relative;
          text-align: center;
          text-decoration: none;
          user-select: none;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: none;
          bottom: 2px;
          content: "";
          left: 2px;
          outline-color: #ffffff;
          outline: 1px solid #605e5c;
          position: absolute;
          right: 2px;
          top: 2px;
          z-index: 1;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
          bottom: -2px;
          left: -2px;
          outline-color: ButtonText;
          right: -2px;
          top: -2px;
        }
        &:active > * {
          left: 0px;
          position: relative;
          top: 0px;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
        &:hover {
          background-color: #106ebe;
          border: 1px solid #106ebe;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
          background-color: Highlight;
          border-color: Highlight;
          color: Window;
        }
        &:hover .ms-Button-description {
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover .ms-Button-description {
          background-color: Highlight;
          color: Window;
        }
        &:active {
          background-color: #005a9e;
          border: 1px solid #005a9e;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:active {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
        &:active .ms-Button-description {
          color: inherit;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:active .ms-Button-description {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
    data-is-focusable={true}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    type="button"
  >
    <span
      className=
          ms-Button-flexContainer
          {
            align-items: flex-start;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            height: 100%;
            justify-content: center;
            margin-bottom: ;
            margin-left: ;
            margin-right: ;
            margin-top: ;
            min-width: 100%;
          }
      data-automationid="splitbuttonprimary"
    >
      <span
        className=
            ms-Button-textContainer
            {
              display: block;
              flex-grow: 1;
              text-align: left;
            }
      >
        <span
          className=
              ms-Button-label
              {
                display: block;
                font-weight: 600;
                line-height: 100%;
                margin-bottom: 5px;
                margin-left: 0;
                margin-right: 0;
                margin-top: 0;
              }
          id="id__3"
        >
          Primary
        </span>
        <span
          className=
              ms-Button-description
              {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #ffffff;
                display: block;
                font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                font-size: 12px;
                font-weight: 400;
                line-height: 100%;
              }
              @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                -ms-high-contrast-adjust: none;
                background-color: WindowText;
                color: Window;
                forced-color-adjust: none;
              }
          id="id__4"
        >
          This is the secondary text.
        </span>
      </span>
    </span>
  </button>
</div>
`;
