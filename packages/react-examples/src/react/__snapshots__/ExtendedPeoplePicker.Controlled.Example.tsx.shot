// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders ExtendedPeoplePicker.Controlled.Example.tsx correctly 1`] = `
<div>
  <div
    className=
        ms-BasePicker
        ms-BaseExtendedPicker
        {
          margin-bottom: 15px;
          max-width: 400px;
        }
    onCopy={[Function]}
    onKeyDown={[Function]}
  >
    <div
      className=
          ms-FocusZone
          &:focus {
            outline: none;
          }
      data-focuszone-id="FocusZone0"
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDownCapture={[Function]}
    >
      <div
        className="ms-SelectionZone"
        onClick={[Function]}
        onContextMenu={[Function]}
        onDoubleClick={[Function]}
        onFocusCapture={[Function]}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseDown={[Function]}
        onMouseDownCapture={[Function]}
        role="presentation"
      >
        <div
          className="ms-BasePicker-text"
          role="list"
        >
          <div
            className=

                {
                  padding-bottom: 0;
                  padding-left: 10px;
                  padding-right: 10px;
                  padding-top: 0;
                }
            data-is-focusable={true}
          >
            To:
          </div>
          <input
            aria-autocomplete="both"
            aria-expanded={false}
            aria-haspopup="true"
            aria-label="People Picker"
            autoCapitalize="off"
            autoComplete="off"
            className="ms-BasePicker-input"
            data-lpignore={true}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onCompositionEnd={[Function]}
            onCompositionStart={[Function]}
            onCompositionUpdate={[Function]}
            onFocus={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            onPaste={[Function]}
            role="combobox"
            style={
              Object {
                "fontFamily": "inherit",
              }
            }
            value=""
          />
        </div>
      </div>
    </div>
    <div
      className="ms-BasePicker ms-BaseFloatingPicker"
    />
  </div>
  <button
    className=
        ms-Button
        ms-Button--primary
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background-color: #0078d4;
          border-radius: 2px;
          border: 1px solid #0078d4;
          box-sizing: border-box;
          color: #ffffff;
          cursor: pointer;
          display: inline-block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          height: 32px;
          min-width: 80px;
          outline: transparent;
          padding-bottom: 0;
          padding-left: 16px;
          padding-right: 16px;
          padding-top: 0;
          position: relative;
          text-align: center;
          text-decoration: none;
          user-select: none;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: none;
          bottom: 2px;
          content: "";
          left: 2px;
          outline-color: #ffffff;
          outline: 1px solid #605e5c;
          position: absolute;
          right: 2px;
          top: 2px;
          z-index: 1;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
          bottom: -2px;
          left: -2px;
          outline-color: ButtonText;
          right: -2px;
          top: -2px;
        }
        &:active > * {
          left: 0px;
          position: relative;
          top: 0px;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
        &:hover {
          background-color: #106ebe;
          border: 1px solid #106ebe;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
          background-color: Highlight;
          border-color: Highlight;
          color: Window;
        }
        &:active {
          background-color: #005a9e;
          border: 1px solid #005a9e;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:active {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
    data-is-focusable={true}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    type="button"
  >
    <span
      className=
          ms-Button-flexContainer
          {
            align-items: center;
            display: flex;
            flex-wrap: nowrap;
            height: 100%;
            justify-content: center;
          }
      data-automationid="splitbuttonprimary"
    >
      <span
        className=
            ms-Button-textContainer
            {
              display: block;
              flex-grow: 1;
            }
      >
        <span
          className=
              ms-Button-label
              {
                display: block;
                font-weight: 600;
                line-height: 100%;
                margin-bottom: 0;
                margin-left: 4px;
                margin-right: 4px;
                margin-top: 0;
              }
          id="id__1"
        >
          Set focus
        </span>
      </span>
    </span>
  </button>
</div>
`;

exports[`Component Examples renders ExtendedPeoplePicker.Controlled.Example.tsx correctly 2`] = `
<div>
  <div
    className=
        ms-BasePicker
        ms-BaseExtendedPicker
        {
          margin-bottom: 15px;
          max-width: 400px;
        }
    onCopy={[Function]}
    onKeyDown={[Function]}
  >
    <div
      className=
          ms-FocusZone
          &:focus {
            outline: none;
          }
      data-focuszone-id="FocusZone0"
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDownCapture={[Function]}
    >
      <div
        className="ms-SelectionZone"
        onClick={[Function]}
        onContextMenu={[Function]}
        onDoubleClick={[Function]}
        onFocusCapture={[Function]}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseDown={[Function]}
        onMouseDownCapture={[Function]}
        role="presentation"
      >
        <div
          className="ms-BasePicker-text"
          role="list"
        >
          <div
            className=

                {
                  padding-bottom: 0;
                  padding-left: 10px;
                  padding-right: 10px;
                  padding-top: 0;
                }
            data-is-focusable={true}
          >
            To:
          </div>
          <input
            aria-autocomplete="both"
            aria-expanded={false}
            aria-haspopup="true"
            aria-label="People Picker"
            autoCapitalize="off"
            autoComplete="off"
            className="ms-BasePicker-input"
            data-lpignore={true}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onCompositionEnd={[Function]}
            onCompositionStart={[Function]}
            onCompositionUpdate={[Function]}
            onFocus={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            onPaste={[Function]}
            role="combobox"
            style={
              Object {
                "fontFamily": "inherit",
              }
            }
            value=""
          />
        </div>
      </div>
    </div>
    <div
      className="ms-BasePicker ms-BaseFloatingPicker"
    />
  </div>
  <button
    className=
        ms-Button
        ms-Button--primary
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background-color: #0078d4;
          border-radius: 2px;
          border: 1px solid #0078d4;
          box-sizing: border-box;
          color: #ffffff;
          cursor: pointer;
          display: inline-block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          height: 32px;
          min-width: 80px;
          outline: transparent;
          padding-bottom: 0;
          padding-left: 16px;
          padding-right: 16px;
          padding-top: 0;
          position: relative;
          text-align: center;
          text-decoration: none;
          user-select: none;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: none;
          bottom: 2px;
          content: "";
          left: 2px;
          outline-color: #ffffff;
          outline: 1px solid #605e5c;
          position: absolute;
          right: 2px;
          top: 2px;
          z-index: 1;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
          bottom: -2px;
          left: -2px;
          outline-color: ButtonText;
          right: -2px;
          top: -2px;
        }
        &:active > * {
          left: 0px;
          position: relative;
          top: 0px;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
        &:hover {
          background-color: #106ebe;
          border: 1px solid #106ebe;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:hover {
          background-color: Highlight;
          border-color: Highlight;
          color: Window;
        }
        &:active {
          background-color: #005a9e;
          border: 1px solid #005a9e;
          color: #ffffff;
        }
        @media screen and (-ms-high-contrast: active), (forced-colors: active){&:active {
          -ms-high-contrast-adjust: none;
          background-color: WindowText;
          border-color: WindowText;
          color: Window;
          forced-color-adjust: none;
        }
    data-is-focusable={true}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    type="button"
  >
    <span
      className=
          ms-Button-flexContainer
          {
            align-items: center;
            display: flex;
            flex-wrap: nowrap;
            height: 100%;
            justify-content: center;
          }
      data-automationid="splitbuttonprimary"
    >
      <span
        className=
            ms-Button-textContainer
            {
              display: block;
              flex-grow: 1;
            }
      >
        <span
          className=
              ms-Button-label
              {
                display: block;
                font-weight: 600;
                line-height: 100%;
                margin-bottom: 0;
                margin-left: 4px;
                margin-right: 4px;
                margin-top: 0;
              }
          id="id__1"
        >
          Set focus
        </span>
      </span>
    </span>
  </button>
</div>
`;
