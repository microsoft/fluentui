// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Subscribing to the DOM should clear all DOM nodes 1`] = `"<head></head>"`;

exports[`Subscribing to the DOM should correctly recreate nodes after clean 1`] = `
"<head>
  <style data-fela-type=\\"KEYFRAME\\" type=\\"text/css\\">
    @-webkit-keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }

    @-moz-keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }

    @keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\">
    .a {
      color: blue
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" media=\\"(min-width: 300px)\\">
    .b {
      color: red
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" media=\\"(min-width: 300px) and (max-height: 500px)\\">
    .c {
      color: yellow
    }
  </style>
</head>"
`;

exports[`Subscribing to the DOM should render keyframes to a DOM node 1`] = `
"<head>
  <style data-fela-type=\\"KEYFRAME\\" type=\\"text/css\\">
    @-webkit-keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }

    @-moz-keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }

    @keyframes k1 {
      from {
        color: red
      }

      to {
        color: blue
      }
    }
  </style>
</head>"
`;

exports[`Subscribing to the DOM should render media rules and support rules to single DOM nodes (devMode) 1`] = `
"<head>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\">
    .a {
      color: blue
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" data-fela-support=\\"true\\"></style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" media=\\"(min-width: 300px)\\">
    .c {
      color: red
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" media=\\"(min-width: 300px) and (max-height: 500px)\\">
    .d {
      color: yellow
    }
  </style>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\" data-fela-support=\\"true\\" media=\\"(min-width: 300px) and (max-height: 500px)\\"></style>
</head>"
`;

exports[`Subscribing to the DOM should render rules to a DOM node 1`] = `
"<head>
  <style data-fela-type=\\"RULE\\" type=\\"text/css\\">
    .a {
      background-color: red
    }

    .b {
      color: blue
    }

    .c:hover {
      color: red
    }
  </style>
</head>"
`;

exports[`Subscribing to the DOM should render static styles to a DOM node 1`] = `
"<head>
  <style data-fela-type=\\"STATIC\\" type=\\"text/css\\">
    body,
    html {
      background-color: red;
      color: blue
    }
  </style>
</head>"
`;

exports[`Subscribing to the DOM should use insertRule in production 1`] = `
Array [
  Object {
    "_media": "",
    "_support": false,
    "_type": "RULE",
    "style": Object {
      "0_.a": Object {
        "color": "blue",
      },
    },
  },
  Object {
    "_media": "",
    "_support": "true",
    "_type": "RULE",
    "style": Object {
      "(display: flex)": Object {
        "0_.b": Object {
          "display": "flex",
        },
      },
    },
  },
  Object {
    "_media": "(min-width: 300px)",
    "_support": false,
    "_type": "RULE",
    "style": Object {
      "0_.c": Object {
        "color": "red",
      },
    },
  },
  Object {
    "_media": "(min-width: 300px) and (max-height: 500px)",
    "_support": false,
    "_type": "RULE",
    "style": Object {
      "0_.d": Object {
        "color": "yellow",
      },
    },
  },
  Object {
    "_media": "(min-width: 300px) and (max-height: 500px)",
    "_support": "true",
    "_type": "RULE",
    "style": Object {
      "(display: grid)": Object {
        "0_.e": Object {
          "display": "grid",
        },
      },
    },
  },
  Object {
    "_type": "KEYFRAME",
    "style": "@-webkit-keyframes k1{from{color:red}to{color:blue}}@-moz-keyframes k1{from{color:red}to{color:blue}}@keyframes k1{from{color:red}to{color:blue}}",
  },
]
`;
