{"code":"import { css } from '@microsoft/fast-element';\r\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\r\nimport { SystemColors } from '@microsoft/fast-web-utilities';\r\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles/index';\r\nimport { bodyFont, controlCornerRadius, designUnit, disabledOpacity, focusStrokeOuter, focusStrokeWidth, neutralFillStealthActive, neutralFillStealthHover, neutralForegroundHint, neutralForegroundRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../design-tokens';\r\nexport const menuItemStyles = (context, definition) => css `\n    ${display('grid')} :host {\n      contain: layout;\n      overflow: visible;\n      font-family: ${bodyFont};\n      outline: none;\n      box-sizing: border-box;\n      height: calc(${heightNumber} * 1px);\n      grid-template-columns: minmax(32px, auto) 1fr minmax(32px, auto);\n      grid-template-rows: auto;\n      justify-items: center;\n      align-items: center;\n      padding: 0;\n      margin: 0 calc(${designUnit} * 1px);\n      white-space: nowrap;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid transparent;\n    }\n\n    :host(.indent-0) {\n      grid-template-columns: auto 1fr minmax(32px, auto);\n    }\n\n    :host(.indent-0) .content {\n      grid-column: 1;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-0) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) {\n      grid-template-columns: minmax(32px, auto) minmax(32px, auto) 1fr minmax(32px, auto) minmax(32px, auto);\n    }\n\n    :host(.indent-2) .content {\n      grid-column: 3;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-2) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) .start {\n      grid-column: 2;\n    }\n\n    :host(.indent-2) .end {\n      grid-column: 4;\n    }\n\n    :host(:${focusVisible}) {\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(:not([disabled]):hover) {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host(:not([disabled]):active),\n    :host(.expanded) {\n      background: ${neutralFillStealthActive};\n      color: ${neutralForegroundRest};\n    }\n\n    :host([disabled]) {\n      cursor: ${disabledCursor};\n      opacity: ${disabledOpacity};\n    }\n\n    .content {\n      grid-column-start: 2;\n      justify-self: start;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      justify-content: center;\n    }\n\n    :host(.indent-0[aria-haspopup='menu']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-1[aria-haspopup='menu']),\n    :host(.indent-1[role='menuitemcheckbox']),\n    :host(.indent-1[role='menuitemradio']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-2:not([aria-haspopup='menu'])) .end {\n      grid-column: 5;\n    }\n\n    :host .input-container,\n    :host .expand-collapse-glyph-container {\n      display: none;\n    }\n\n    :host([aria-haspopup='menu']) .expand-collapse-glyph-container,\n    :host([role='menuitemcheckbox']) .input-container,\n    :host([role='menuitemradio']) .input-container {\n      display: grid;\n    }\n\n    :host([aria-haspopup='menu']) .content,\n    :host([role='menuitemcheckbox']) .content,\n    :host([role='menuitemradio']) .content {\n      grid-column-start: 3;\n    }\n\n    :host([aria-haspopup='menu'].indent-0) .content {\n      grid-column-start: 1;\n    }\n\n    :host([aria-haspopup='menu']) .end,\n    :host([role='menuitemcheckbox']) .end,\n    :host([role='menuitemradio']) .end {\n      grid-column-start: 4;\n    }\n\n    :host .expand-collapse,\n    :host .checkbox,\n    :host .radio {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      box-sizing: border-box;\n      outline: none;\n    }\n\n    :host .checkbox-indicator,\n    :host .radio-indicator,\n    slot[name='checkbox-indicator'],\n    slot[name='radio-indicator'] {\n      display: none;\n    }\n\n    ::slotted([slot='end']:not(svg)) {\n      margin-inline-end: 10px;\n      color: ${neutralForegroundHint};\n    }\n\n    :host([aria-checked='true']) .checkbox-indicator,\n    :host([aria-checked='true']) slot[name='checkbox-indicator'],\n    :host([aria-checked='true']) .radio-indicator,\n    :host([aria-checked='true']) slot[name='radio-indicator'] {\n      display: flex;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host,\n        ::slotted([slot='end']:not(svg)) {\n          forced-color-adjust: none;\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host(:not([disabled]):hover) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(:hover) .start,\n        :host(:hover) .end,\n        :host(:hover)::slotted(svg),\n        :host(:active) .start,\n        :host(:active) .end,\n        :host(:active)::slotted(svg),\n        :host(:hover) ::slotted([slot='end']:not(svg)),\n        :host(:${focusVisible}) ::slotted([slot='end']:not(svg)) {\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(.expanded) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host(:${focusVisible}) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.ButtonText};\n          box-shadow: 0 0 0 calc(${strokeWidth} * 1px) inset ${SystemColors.HighlightText};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([disabled]),\n        :host([disabled]:hover),\n        :host([disabled]:hover) .start,\n        :host([disabled]:hover) .end,\n        :host([disabled]:hover)::slotted(svg),\n        :host([disabled]:${focusVisible}) {\n          background: ${SystemColors.ButtonFace};\n          color: ${SystemColors.GrayText};\n          fill: currentcolor;\n          opacity: 1;\n        }\n        :host([disabled]:${focusVisible}) {\n          border-color: ${SystemColors.GrayText};\n        }\n        :host .expanded-toggle,\n        :host .checkbox,\n        :host .radio {\n          border-color: ${SystemColors.ButtonText};\n          background: ${SystemColors.HighlightText};\n        }\n        :host([checked]) .checkbox,\n        :host([checked]) .radio {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host(:hover) .expanded-toggle,\n            :host(:hover) .checkbox,\n            :host(:hover) .radio,\n            :host(:${focusVisible}) .expanded-toggle,\n            :host(:${focusVisible}) .checkbox,\n            :host(:${focusVisible}) .radio,\n            :host([checked]:hover) .checkbox,\n            :host([checked]:hover) .radio,\n            :host([checked]:${focusVisible}) .checkbox,\n            :host([checked]:${focusVisible}) .radio {\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) .checkbox-indicator,\n        :host([aria-checked='true']) ::slotted([slot='checkbox-indicator']),\n        :host([aria-checked='true']) ::slotted([slot='radio-indicator']) {\n          fill: ${SystemColors.Highlight};\n        }\n        :host([aria-checked='true']) .radio-indicator {\n          background: ${SystemColors.Highlight};\n        }\n      `), new DirectionalStyleSheetBehavior(css `\n        .expand-collapse-glyph-container {\n          transform: rotate(0deg);\n        }\n      `, css `\n        .expand-collapse-glyph-container {\n          transform: rotate(180deg);\n        }\n      `));\r\n","references":["/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-element/dist/fast-element.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-foundation/dist/fast-foundation.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-web-utilities/dist/index.d.ts","/home/chassunc/projects/fluentui/packages/web-components/src/styles/index.ts","/home/chassunc/projects/fluentui/packages/web-components/src/design-tokens.ts"]}
