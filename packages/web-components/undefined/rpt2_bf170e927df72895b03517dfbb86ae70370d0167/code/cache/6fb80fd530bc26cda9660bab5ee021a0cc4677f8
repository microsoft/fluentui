{"code":"import { css } from '@microsoft/fast-element';\r\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\r\nimport { SystemColors } from '@microsoft/fast-web-utilities';\r\nimport { elevationShadowFlyout } from '../styles/elevation';\r\nimport { heightNumber } from '../styles/size';\r\nimport { appearanceBehavior } from '../utilities/behaviors';\r\nimport { bodyFont, controlCornerRadius, designUnit, disabledOpacity, fillColor, focusStrokeOuter, layerCornerRadius, neutralFillActive, neutralFillHover, neutralFillRest, neutralFillSecondaryActive, neutralFillSecondaryHover, neutralFillSecondaryRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRest, neutralForegroundRest, neutralStrokeControlActive, neutralStrokeControlHover, neutralStrokeControlRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../design-tokens';\r\nexport const selectFilledStyles = (context, definition) => css `\n  :host {\n    background: ${neutralFillSecondaryRest};\n    border-color: transparent;\n  }\n\n  :host(:not([disabled]):not([open]):hover) {\n    background: ${neutralFillSecondaryHover};\n    border-color: transparent;\n  }\n\n  :host(:not([disabled]):not([open]):active) {\n    background: ${neutralFillSecondaryActive};\n    border-color: transparent;\n  }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n      :host(:not([disabled]):not([open]):hover) {\n        background: transparent;\n      }\n      :host(:not([disabled]):not([open]):hover),\n      :host(:not([disabled]):not([open]):active) {\n        border-color: ${SystemColors.Highlight};\n      }\n      :host(:${focusVisible}) {\n        forced-color-adjust: none;\n        background: transparent;\n        border-color: ${SystemColors.Highlight};\n        box-shadow: 0 0 0 1px inset ${SystemColors.Highlight};\n      }\n    `));\r\nexport const selectStealthStyles = (context, definition) => css `\n  :host {\n    background: ${neutralFillStealthRest};\n    border-color: transparent;\n  }\n\n  :host(:not([disabled]):not([open]):hover) {\n    background: ${neutralFillStealthHover};\n    border-color: transparent;\n  }\n\n  :host(:not([disabled]):not([open]):active) {\n    background: ${neutralFillStealthActive};\n    border-color: transparent;\n  }\n`;\r\nexport const selectStyles = (context, definition) => css `\n    ${display('inline-flex')} :host {\n      background: padding-box linear-gradient(${neutralFillRest}, ${neutralFillRest}),\n        border-box ${neutralStrokeControlRest};\n      border: calc(${strokeWidth} * 1px) solid transparent;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      box-sizing: border-box;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      font-family: ${bodyFont};\n      height: calc(${heightNumber} * 1px);\n      position: relative;\n      user-select: none;\n      min-width: 250px;\n      vertical-align: top;\n    }\n\n    :host .listbox {\n      box-shadow: ${elevationShadowFlyout};\n      background: ${fillColor};\n      border-radius: calc(${layerCornerRadius} * 1px);\n      box-sizing: border-box;\n      display: inline-flex;\n      flex-direction: column;\n      left: 0;\n      max-height: calc(var(--max-height) - (${heightNumber} * 1px));\n      padding: calc((${designUnit} - ${strokeWidth} ) * 1px) 0;\n      overflow-y: auto;\n      position: absolute;\n      width: 100%;\n      z-index: 1;\n      margin: 1px 0;\n      border: calc(${strokeWidth} * 1px) solid transparent;\n    }\n\n    :host .listbox[hidden] {\n      display: none;\n    }\n\n    :host .control {\n      align-items: center;\n      box-sizing: border-box;\n      cursor: pointer;\n      display: flex;\n      font-size: ${typeRampBaseFontSize};\n      font-family: inherit;\n      min-height: 100%;\n      line-height: ${typeRampBaseLineHeight};\n      padding: 0 calc(${designUnit} * 2.25px);\n      width: 100%;\n    }\n\n    :host(:not([disabled]):not([open]):hover) {\n      background: padding-box linear-gradient(${neutralFillHover}, ${neutralFillHover}),\n        border-box ${neutralStrokeControlHover};\n    }\n\n    :host(:not([disabled]):not([open]):active) {\n      background: padding-box linear-gradient(${neutralFillActive}, ${neutralFillActive}),\n        border-box ${neutralStrokeControlActive};\n    }\n\n    :host(:${focusVisible}) {\n      border-color: ${focusStrokeOuter};\n      outline: none;\n      box-shadow: 0 0 0 1px inset ${focusStrokeOuter};\n    }\n\n    :host([disabled]) {\n      cursor: ${disabledCursor};\n      opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n      cursor: ${disabledCursor};\n      user-select: none;\n    }\n\n    :host([open][position='above']) .listbox {\n      bottom: calc((${heightNumber} + ${designUnit} * 2) * 1px);\n    }\n\n    :host([open][position='below']) .listbox {\n      top: calc((${heightNumber} + ${designUnit} * 2) * 1px);\n    }\n\n    .selected-value {\n      font-family: inherit;\n      flex: 1 1 auto;\n      text-align: start;\n    }\n\n    .indicator {\n      flex: 0 0 auto;\n      margin-inline-start: 1em;\n    }\n\n    slot[name='listbox'] {\n      display: none;\n      width: 100%;\n    }\n\n    :host([open]) slot[name='listbox'] {\n      display: flex;\n      position: absolute;\n    }\n\n    .start {\n      margin-inline-end: 11px;\n    }\n\n    .end {\n      margin-inline-start: 11px;\n    }\n\n    .start,\n    .end,\n    .indicator,\n    ::slotted(svg) {\n      display: flex;\n    }\n\n    ::slotted([role='option']) {\n      flex: 0 0 auto;\n    }\n  `.withBehaviors(appearanceBehavior('filled', selectFilledStyles(context, definition)), appearanceBehavior('stealth', selectStealthStyles(context, definition)), forcedColorsStylesheetBehavior(css `\n      :host {\n        background: ${SystemColors.ButtonFace};\n        color: ${SystemColors.ButtonText};\n      }\n      :host(:not([disabled]):not([open]):hover) {\n        background: transparent;\n      }\n      :host(:not([disabled]):hover) {\n        border-color: ${SystemColors.Highlight};\n      }\n      :host(:${focusVisible}) {\n        forced-color-adjust: none;\n        border-color: ${SystemColors.Highlight};\n        box-shadow: 0 0 0 1px inset ${SystemColors.Highlight};\n      }\n      :host([open]) .listbox {\n        background: ${SystemColors.ButtonFace};\n        border-color: ${SystemColors.CanvasText};\n      }\n      .start, .end, .indicator, ::slotted(svg) {\n        fill: ${SystemColors.FieldText};\n      }\n      :host([disabled]) {\n        border-color: ${SystemColors.GrayText};\n        color: ${SystemColors.GrayText};\n        opacity: 1;\n      }\n      :host([disabled]) .start,\n      :host([disabled]) .end,\n      :host([disabled]) .indicator,\n      :host([disabled]) ::slotted(svg) {\n        fill: ${SystemColors.GrayText};\n      }\n    `));\r\n","references":["/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-element/dist/fast-element.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-foundation/dist/fast-foundation.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-web-utilities/dist/index.d.ts","/home/chassunc/projects/fluentui/packages/web-components/src/styles/elevation.ts","/home/chassunc/projects/fluentui/packages/web-components/src/styles/size.ts","/home/chassunc/projects/fluentui/packages/web-components/src/utilities/behaviors.ts","/home/chassunc/projects/fluentui/packages/web-components/src/design-tokens.ts"]}
