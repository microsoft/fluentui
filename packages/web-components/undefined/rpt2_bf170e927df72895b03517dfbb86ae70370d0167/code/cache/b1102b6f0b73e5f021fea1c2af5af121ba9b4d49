{"code":"import { direction as directionDesignToken } from '../design-tokens';\r\n/**\r\n * Behavior to conditionally apply LTR and RTL stylesheets. To determine which to apply,\r\n * the behavior will use the nearest DesignSystemProvider's 'direction' design system value.\r\n *\r\n * @public\r\n * @example\r\n * ```ts\r\n * import { css } from \"@microsoft/fast-element\";\r\n * import { DirectionalStyleSheetBehavior } from \"@microsoft/fast-foundation\";\r\n *\r\n * css`\r\n *  // ...\r\n * `.withBehaviors(new DirectionalStyleSheetBehavior(\r\n *   css`:host { content: \"ltr\"}`),\r\n *   css`:host { content: \"rtl\"}`),\r\n * )\r\n * ```\r\n */\r\nexport class DirectionalStyleSheetBehavior {\r\n    constructor(ltr, rtl) {\r\n        this.cache = new WeakMap();\r\n        this.ltr = ltr;\r\n        this.rtl = rtl;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    bind(source) {\r\n        this.attach(source);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    unbind(source) {\r\n        const cache = this.cache.get(source);\r\n        if (cache) {\r\n            directionDesignToken.unsubscribe(cache);\r\n        }\r\n    }\r\n    attach(source) {\r\n        const subscriber = this.cache.get(source) || new DirectionalStyleSheetBehaviorSubscription(this.ltr, this.rtl, source);\r\n        const value = directionDesignToken.getValueFor(source);\r\n        directionDesignToken.subscribe(subscriber);\r\n        subscriber.attach(value);\r\n        this.cache.set(source, subscriber);\r\n    }\r\n}\r\n/**\r\n * Subscription for {@link DirectionalStyleSheetBehavior}\r\n */\r\nclass DirectionalStyleSheetBehaviorSubscription {\r\n    constructor(ltr, rtl, source) {\r\n        this.ltr = ltr;\r\n        this.rtl = rtl;\r\n        this.source = source;\r\n        this.attached = null;\r\n    }\r\n    handleChange({ target, token }) {\r\n        this.attach(token.getValueFor(this.source));\r\n    }\r\n    attach(direction) {\r\n        if (this.attached !== this[direction]) {\r\n            if (this.attached !== null) {\r\n                this.source.$fastController.removeStyles(this.attached);\r\n            }\r\n            this.attached = this[direction];\r\n            if (this.attached !== null) {\r\n                this.source.$fastController.addStyles(this.attached);\r\n            }\r\n        }\r\n    }\r\n}\r\n","references":["/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-element/dist/fast-element.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-foundation/dist/fast-foundation.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-web-utilities/dist/index.d.ts","/home/chassunc/projects/fluentui/packages/web-components/src/design-tokens.ts"]}
