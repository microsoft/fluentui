{"code":"import { css } from '@microsoft/fast-element';\r\nimport { DesignToken, disabledCursor, focusVisible, } from '@microsoft/fast-foundation';\r\nimport { SystemColors } from '@microsoft/fast-web-utilities';\r\nimport { accentFillRest, bodyFont, controlCornerRadius, disabledOpacity, focusStrokeWidth, neutralFillInputFocus, neutralFillInputHover, neutralFillInputRecipe, neutralFillInputRest, neutralFillSecondaryHover, neutralFillSecondaryRecipe, neutralFillSecondaryRest, neutralForegroundHintRecipe, neutralForegroundRest, neutralStrokeInputHover, neutralStrokeInputRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../../design-tokens';\r\nimport { heightNumber } from '../size';\r\nconst placeholderRest = DesignToken.create('input-placeholder-rest').withDefault((target) => {\r\n    const baseRecipe = neutralFillInputRecipe.getValueFor(target);\r\n    const hintRecipe = neutralForegroundHintRecipe.getValueFor(target);\r\n    return hintRecipe.evaluate(target, baseRecipe.evaluate(target).rest);\r\n});\r\nconst placeholderHover = DesignToken.create('input-placeholder-hover').withDefault((target) => {\r\n    const baseRecipe = neutralFillInputRecipe.getValueFor(target);\r\n    const hintRecipe = neutralForegroundHintRecipe.getValueFor(target);\r\n    return hintRecipe.evaluate(target, baseRecipe.evaluate(target).hover);\r\n});\r\nconst filledPlaceholderRest = DesignToken.create('input-filled-placeholder-rest').withDefault((target) => {\r\n    const baseRecipe = neutralFillSecondaryRecipe.getValueFor(target);\r\n    const hintRecipe = neutralForegroundHintRecipe.getValueFor(target);\r\n    return hintRecipe.evaluate(target, baseRecipe.evaluate(target).rest);\r\n});\r\nconst filledPlaceholderHover = DesignToken.create('input-filled-placeholder-hover').withDefault((target) => {\r\n    const baseRecipe = neutralFillSecondaryRecipe.getValueFor(target);\r\n    const hintRecipe = neutralForegroundHintRecipe.getValueFor(target);\r\n    return hintRecipe.evaluate(target, baseRecipe.evaluate(target).hover);\r\n});\r\n/**\r\n * @internal\r\n */\r\nexport const inputStyles = (context, definition, rootSelector) => css `\n  :host {\n    font-family: ${bodyFont};\n    font-size: ${typeRampBaseFontSize};\n    line-height: ${typeRampBaseLineHeight};\n    color: ${neutralForegroundRest};\n    fill: currentcolor;\n    outline: none;\n    user-select: none;\n    position: relative;\n  }\n\n  ${rootSelector} {\n    box-sizing: border-box;\n    position: relative;\n    color: inherit;\n    background: padding-box linear-gradient(${neutralFillInputRest}, ${neutralFillInputRest}),\n      border-box ${neutralStrokeInputRest};\n    border: calc(${strokeWidth} * 1px) solid transparent;\n    border-radius: calc(${controlCornerRadius} * 1px);\n    height: calc(${heightNumber} * 1px);\n    font-family: inherit;\n    font-size: inherit;\n    line-height: inherit;\n  }\n\n  .control {\n    width: 100%;\n  }\n\n  .control:hover,\n  .control:${focusVisible},\n  .control:disabled,\n  .control:active {\n    outline: none;\n  }\n\n  .label {\n    display: block;\n    color: ${neutralForegroundRest};\n    cursor: pointer;\n    font-size: ${typeRampBaseFontSize};\n    line-height: ${typeRampBaseLineHeight};\n    margin-bottom: 4px;\n  }\n\n  .label__hidden {\n    display: none;\n    visibility: hidden;\n  }\n\n  :host(:hover:not([disabled]):not(:focus-within)) ${rootSelector} {\n    background: padding-box linear-gradient(${neutralFillInputHover}, ${neutralFillInputHover}),\n      border-box ${neutralStrokeInputHover};\n  }\n\n  :host(:not([disabled]):focus-within) ${rootSelector} {\n    background: padding-box linear-gradient(${neutralFillInputFocus}, ${neutralFillInputFocus}),\n      border-box ${neutralStrokeInputRest};\n  }\n\n  .control::placeholder {\n    color: ${placeholderRest};\n  }\n\n  :host(:hover:not([disabled]):not(:focus-within)) .control::placeholder {\n    color: ${placeholderHover};\n  }\n\n  :host([disabled]) ${rootSelector}, :host([readonly]) ${rootSelector}, :host([disabled]) .label,\n  :host([readonly]) .label,\n  :host([disabled]) .control,\n  :host([readonly]) .control {\n    cursor: ${disabledCursor};\n  }\n\n  :host([disabled]) {\n    opacity: ${disabledOpacity};\n  }\n\n  :host([disabled]) ${rootSelector} {\n    background: padding-box linear-gradient(${neutralFillInputRest}, ${neutralFillInputRest}),\n      border-box ${neutralStrokeRest};\n  }\n`;\r\n/**\r\n * @internal\r\n */\r\nexport const inputStateStyles = (context, definition, rootSelector) => css `\n  :host(:not([disabled]):active)::after {\n    left: 50%;\n    width: 40%;\n    transform: translateX(-50%);\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  :host(:not([disabled]):focus-within)::after {\n    left: 0;\n    width: 100%;\n    transform: none;\n  }\n\n  :host(:not([disabled]):active)::after,\n  :host(:not([disabled]):focus-within:not(:active))::after {\n    content: '';\n    position: absolute;\n    height: calc(${focusStrokeWidth} * 1px);\n    bottom: 0;\n    border-bottom: calc(${focusStrokeWidth} * 1px) solid ${accentFillRest};\n    border-bottom-left-radius: calc(${controlCornerRadius} * 1px);\n    border-bottom-right-radius: calc(${controlCornerRadius} * 1px);\n    z-index: 2;\n    transition: all 300ms cubic-bezier(0.1, 0.9, 0.2, 1);\n  }\n`;\r\n/**\r\n * @internal\r\n */\r\nexport const inputFilledStyles = (context, definition, rootSelector) => css `\n  :host ${rootSelector} {\n    background: ${neutralFillSecondaryRest};\n    border-color: transparent;\n  }\n\n  :host(:hover:not([disabled]):not(:focus-within)) ${rootSelector} {\n    background: ${neutralFillSecondaryHover};\n    border-color: transparent;\n  }\n\n  .control::placeholder {\n    color: ${filledPlaceholderRest};\n  }\n\n  :host(:hover:not([disabled]):not(:focus-within)) .control::placeholder {\n    color: ${filledPlaceholderHover};\n  }\n\n  :host(:focus-within:not([disabled])) ${rootSelector} {\n    border-color: transparent;\n    box-shadow: none;\n  }\n`;\r\n/**\r\n * @internal\r\n */\r\nexport const inputForcedColorStyles = (context, definition, rootSelector) => css `\n  :host ${rootSelector} {\n    background: ${SystemColors.Field};\n    border-color: ${SystemColors.FieldText};\n  }\n  :host(:hover:not([disabled]):not(:focus-within)) ${rootSelector} {\n    border-color: ${SystemColors.Highlight};\n  }\n  :host(:not([disabled]):active)::after,\n  :host(:not([disabled]):focus-within:not(:active))::after {\n    border-bottom-color: ${SystemColors.Highlight};\n  }\n  :host([disabled]) {\n    opacity: 1;\n  }\n  :host([disabled]) ${rootSelector} {\n    border-color: ${SystemColors.GrayText};\n  }\n  :host([disabled]) ::placeholder,\n  :host([disabled]) ::-webkit-input-placeholder,\n  :host([disabled]) .label {\n    color: ${SystemColors.GrayText};\n    fill: currentcolor;\n  }\n`;\r\n/**\r\n * @internal\r\n */\r\nexport const inputFilledForcedColorStyles = (context, definition, rootSelector) => css `\n  :host ${rootSelector},\n  :host(:hover:not([disabled])) ${rootSelector},\n  :host(:active:not([disabled])) ${rootSelector},\n  :host(:focus-within:not([disabled])) ${rootSelector} {\n    background: ${SystemColors.Field};\n    border-color: ${SystemColors.FieldText};\n  }\n  :host(:not([disabled]):active)::after,\n  :host(:not([disabled]):focus-within:not(:active))::after {\n    border-bottom-color: ${SystemColors.Highlight};\n  }\n  :host([disabled]) ${rootSelector} {\n    border-color: ${SystemColors.GrayText};\n  }\n`;\r\n","references":["/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-element/dist/fast-element.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-foundation/dist/fast-foundation.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-web-utilities/dist/index.d.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/swatch.ts","/home/chassunc/projects/fluentui/packages/web-components/src/design-tokens.ts","/home/chassunc/projects/fluentui/packages/web-components/src/styles/size.ts"]}
