{"code":"import { directionByIsDark } from '../utilities/direction-by-is-dark';\r\nimport { GradientSwatchRGB } from './gradient-swatch';\r\n/**\r\n * @internal\r\n */\r\nexport function underlineStroke(palette, reference, restDelta, hoverDelta, activeDelta, focusDelta, shadowDelta, width) {\r\n    const referenceIndex = palette.closestIndexOf(reference);\r\n    const direction = directionByIsDark(reference);\r\n    const restIndex = referenceIndex + direction * restDelta;\r\n    const hoverIndex = restIndex + direction * (hoverDelta - restDelta);\r\n    const activeIndex = restIndex + direction * (activeDelta - restDelta);\r\n    const focusIndex = restIndex + direction * (focusDelta - restDelta);\r\n    const midPosition = `calc(100% - ${width})`;\r\n    function gradientHelper(index, applyShadow) {\r\n        const color = palette.get(index);\r\n        if (applyShadow) {\r\n            const underlineColor = palette.get(index + direction * shadowDelta);\r\n            const g = `linear-gradient(${color.toColorString()} ${midPosition}, ${underlineColor.toColorString()} ${midPosition}, ${underlineColor.toColorString()})`;\r\n            return GradientSwatchRGB.fromObject(color, g);\r\n        }\r\n        else {\r\n            return color;\r\n        }\r\n    }\r\n    return {\r\n        rest: gradientHelper(restIndex, true),\r\n        hover: gradientHelper(hoverIndex, true),\r\n        active: gradientHelper(activeIndex, false),\r\n        focus: gradientHelper(focusIndex, true),\r\n    };\r\n}\r\n","references":["/home/chassunc/projects/fluentui/packages/web-components/src/color/palette.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/recipe.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/swatch.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/utilities/direction-by-is-dark.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/recipes/gradient-swatch.ts"]}
