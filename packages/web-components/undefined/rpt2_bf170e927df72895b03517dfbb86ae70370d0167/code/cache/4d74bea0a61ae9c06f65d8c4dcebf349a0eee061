{"code":"import { css } from '@microsoft/fast-element';\r\nimport { DesignToken, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\r\nimport { SystemColors } from '@microsoft/fast-web-utilities';\r\nimport { bodyFont, controlCornerRadius, designUnit, focusStrokeOuter, focusStrokeWidth, layerCornerRadius, neutralFillLayerAltRest, neutralFillLayerRecipe, neutralFillLayerRest, neutralFillStealthRecipe, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../../design-tokens';\r\nimport { heightNumber } from '../../styles/size';\r\nconst neutralFillStealthRestOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-rest-on-neutral-fill-layer-rest').withDefault((target) => {\r\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\r\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\r\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).rest;\r\n});\r\nconst neutralFillStealthHoverOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-hover-on-neutral-fill-layer-rest').withDefault((target) => {\r\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\r\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\r\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).hover;\r\n});\r\nconst neutralFillStealthActiveOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-active-on-neutral-fill-layer-rest').withDefault((target) => {\r\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\r\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\r\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).active;\r\n});\r\nexport const accordionItemStyles = (context, definition) => css `\n    ${display('flex')} :host {\n      box-sizing: border-box;\n      font-family: ${bodyFont};\n      flex-direction: column;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      background: ${neutralFillLayerRest};\n      color: ${neutralForegroundRest};\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-radius: calc(${layerCornerRadius} * 1px);\n    }\n\n    .region {\n      display: none;\n      padding: calc(${designUnit} * 2 * 1px);\n      background: ${neutralFillLayerAltRest};\n    }\n\n    .heading {\n      display: grid;\n      position: relative;\n      grid-template-columns: auto 1fr auto auto;\n      align-items: center;\n      z-index: 2;\n    }\n\n    .button {\n      appearance: none;\n      border: none;\n      background: none;\n      grid-column: 2;\n      grid-row: 1;\n      outline: none;\n      margin: calc(${designUnit} * 3 * 1px) 0;\n      padding: 0 calc(${designUnit} * 2 * 1px);\n      text-align: left;\n      color: inherit;\n      cursor: pointer;\n      font-family: inherit;\n    }\n\n    .button::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      cursor: pointer;\n    }\n\n    .button:${focusVisible}::before {\n      outline: none;\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      border-radius: calc(${layerCornerRadius} * 1px);\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(.expanded) .button:${focusVisible}::before {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    :host(.expanded) .region {\n      display: block;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-bottom-left-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n      border-bottom-right-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n    }\n\n    .icon {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 4;\n      z-index: 2;\n      pointer-events: none;\n      background: ${neutralFillStealthRestOnNeutralFillLayerRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      fill: currentcolor;\n      width: calc(${heightNumber} * 1px);\n      height: calc(${heightNumber} * 1px);\n      margin: calc(${designUnit} * 2 * 1px);\n    }\n\n    .heading:hover .icon {\n      background: ${neutralFillStealthHoverOnNeutralFillLayerRest};\n    }\n\n    .heading:active .icon {\n      background: ${neutralFillStealthActiveOnNeutralFillLayerRest};\n    }\n\n    slot[name='collapsed-icon'] {\n      display: flex;\n    }\n\n    :host(.expanded) slot[name='collapsed-icon'] {\n      display: none;\n    }\n\n    slot[name='expanded-icon'] {\n      display: none;\n    }\n\n    :host(.expanded) slot[name='expanded-icon'] {\n      display: flex;\n    }\n\n    .start {\n      display: flex;\n      align-items: center;\n      padding-inline-start: calc(${designUnit} * 2 * 1px);\n      justify-content: center;\n      grid-column: 1;\n      z-index: 2;\n    }\n\n    .end {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 3;\n      z-index: 2;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        .button:${focusVisible}::before {\n          border-color: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight};\n        }\n        .icon {\n          fill: ${SystemColors.ButtonText};\n        }\n      `));\r\n","references":["/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-element/dist/fast-element.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-foundation/dist/fast-foundation.d.ts","/home/chassunc/projects/fluentui/node_modules/@microsoft/fast-web-utilities/dist/index.d.ts","/home/chassunc/projects/fluentui/packages/web-components/src/color/swatch.ts","/home/chassunc/projects/fluentui/packages/web-components/src/design-tokens.ts","/home/chassunc/projects/fluentui/packages/web-components/src/styles/size.ts"]}
