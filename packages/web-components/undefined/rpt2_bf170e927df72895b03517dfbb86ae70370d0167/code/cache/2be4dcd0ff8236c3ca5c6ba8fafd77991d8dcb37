{"code":"/**\r\n * @internal\r\n */\r\nexport function binarySearch(valuesToSearch, searchCondition, startIndex = 0, endIndex = valuesToSearch.length - 1) {\r\n    if (endIndex === startIndex) {\r\n        return valuesToSearch[startIndex];\r\n    }\r\n    const middleIndex = Math.floor((endIndex - startIndex) / 2) + startIndex;\r\n    // Check to see if this passes on the item in the center of the array\r\n    // if it does check the previous values\r\n    return searchCondition(valuesToSearch[middleIndex])\r\n        ? binarySearch(valuesToSearch, searchCondition, startIndex, middleIndex)\r\n        : binarySearch(valuesToSearch, searchCondition, middleIndex + 1, // exclude this index because it failed the search condition\r\n        endIndex);\r\n}\r\n","references":[]}
