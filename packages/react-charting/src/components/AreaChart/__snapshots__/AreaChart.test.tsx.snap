// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AreaChart - mouse events Should render callout correctly on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_5"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone6"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_5"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_5"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle3"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          key="0-dots-areaChart_0"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle2_0"
            key="circle2_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="#ffffff"
            id="circle2_1"
            key="circle2_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={8}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
        </g>
        <line
          id="verticalLine_1"
          key="verticalLine_1"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="visibility"
          x1={-20}
          x2={-20}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone7"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className=
        ms-Callout-container
        {
          position: relative;
        }
  >
    <div
      className=
          ms-Callout
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            border-radius: 2px;
            box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
            box-sizing: border-box;
            display: flex;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            outline: transparent;
            position: absolute;
            z-index: 1000000;
          }
          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
            border-color: WindowText;
            border-style: solid;
            border-width: 1px;
          }
          &::-moz-focus-inner {
            border: 0px;
          }
      data-is-focusable={true}
      hidden={false}
      id="toolTipundefined"
      style={
        Object {
          "filter": "opacity(0)",
          "opacity": 0,
          "pointerEvents": "none",
        }
      }
      tabIndex={-1}
    >
      <div
        className=
            ms-Callout-main
            {
              background-color: #ffffff;
              border-radius: 2px;
              overflow-x: hidden;
              overflow-y: auto;
              position: relative;
              width: 100%;
            }
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "maxHeight": "100%",
            "outline": "none",
            "overflowY": undefined,
          }
        }
      >
        <div
          className=

              {
                background-blend-mode: normal, luminosity;
                background-color: #ffffff;
                display: grid;
                overflow: hidden;
                padding-bottom: 10px;
                padding-left: 16px;
                padding-right: 16px;
                padding-top: 11px;
              }
        >
          <div
            className=

                {
                  display: flex;
                  flex-direction: row;
                  justify-content: space-between;
                }
            style={Object {}}
          >
            <div
              className=

                  {
                    -moz-osx-font-smoothing: grayscale;
                    -webkit-font-smoothing: antialiased;
                    color: #605e5c;
                    font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                    font-size: 12px;
                    font-weight: 400;
                    line-height: 16px;
                    opacity: 0.8;
                  }
              data-is-focusable={false}
              role="text"
            >
              40
            </div>
          </div>
          <div
            style={Object {}}
          >
            <div
              data-is-focusable={false}
              key="callout-content-0"
              role="text"
              style={Object {}}
            >
              <div
                style={Object {}}
              >
                <div
                  className=

                      {
                        -moz-osx-font-smoothing: grayscale;
                        -webkit-font-smoothing: antialiased;
                        border-left: 4px solid red;
                        color: #323130;
                        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                        font-size: 16px;
                        font-weight: 400;
                        margin-top: 13px;
                        padding-left: 8px;
                      }
                      @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                        forced-color-adjust: none;
                      }
                  id="0_80"
                >
                  <div>
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #605e5c;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                          }
                          @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& {
                            color: rgb(255, 255, 255);
                          }
                    >
                       
                      metaData1
                    </div>
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 16px;
                            font-weight: bold;
                            line-height: 22px;
                          }
                          @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& {
                            color: rgb(255, 255, 255);
                          }
                    >
                      80
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart - mouse events Should render customized callout on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_5"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone6"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_5"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_5"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle3"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          key="0-dots-areaChart_0"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle2_0"
            key="circle2_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="#ffffff"
            id="circle2_1"
            key="circle2_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={8}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
        </g>
        <line
          id="verticalLine_1"
          key="verticalLine_1"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="visibility"
          x1={-20}
          x2={-20}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone7"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className=
        ms-Callout-container
        {
          position: relative;
        }
  >
    <div
      className=
          ms-Callout
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            border-radius: 2px;
            box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
            box-sizing: border-box;
            display: flex;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            outline: transparent;
            position: absolute;
            z-index: 1000000;
          }
          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
            border-color: WindowText;
            border-style: solid;
            border-width: 1px;
          }
          &::-moz-focus-inner {
            border: 0px;
          }
      data-is-focusable={true}
      hidden={false}
      id="toolTipundefined"
      style={
        Object {
          "filter": "opacity(0)",
          "opacity": 0,
          "pointerEvents": "none",
        }
      }
      tabIndex={-1}
    >
      <div
        className=
            ms-Callout-main
            {
              background-color: #ffffff;
              border-radius: 2px;
              overflow-x: hidden;
              overflow-y: auto;
              position: relative;
              width: 100%;
            }
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "maxHeight": "100%",
            "outline": "none",
            "overflowY": undefined,
          }
        }
      >
        <div>
          <pre>
            {
  "x": 40,
  "values": [
    {
      "legend": "metaData1",
      "y": 80,
      "color": "red"
    }
  ]
}
          </pre>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart - mouse events Should render customized callout per stack on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_5"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone6"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_5"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_5"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle3"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          key="0-dots-areaChart_0"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle2_0"
            key="circle2_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="#ffffff"
            id="circle2_1"
            key="circle2_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={8}
            stroke="red"
            strokeWidth={3}
            visibility="visibility"
          />
        </g>
        <line
          id="verticalLine_1"
          key="verticalLine_1"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="visibility"
          x1={-20}
          x2={-20}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone7"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className=
        ms-Callout-container
        {
          position: relative;
        }
  >
    <div
      className=
          ms-Callout
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            border-radius: 2px;
            box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
            box-sizing: border-box;
            display: flex;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            outline: transparent;
            position: absolute;
            z-index: 1000000;
          }
          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
            border-color: WindowText;
            border-style: solid;
            border-width: 1px;
          }
          &::-moz-focus-inner {
            border: 0px;
          }
      data-is-focusable={true}
      hidden={false}
      id="toolTipundefined"
      style={
        Object {
          "filter": "opacity(0)",
          "opacity": 0,
          "pointerEvents": "none",
        }
      }
      tabIndex={-1}
    >
      <div
        className=
            ms-Callout-main
            {
              background-color: #ffffff;
              border-radius: 2px;
              overflow-x: hidden;
              overflow-y: auto;
              position: relative;
              width: 100%;
            }
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "maxHeight": "100%",
            "outline": "none",
            "overflowY": undefined,
          }
        }
      >
        <div>
          <pre>
            {
  "x": 40,
  "values": [
    {
      "legend": "metaData1",
      "y": 80,
      "color": "red"
    }
  ]
}
          </pre>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders Areachart correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_5"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone6"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_5"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_5"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle3"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle2_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle2_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_1"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone7"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders Areachart with single point correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_60"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone61"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_60"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_60"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle58"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={10}
        />
      </g>
      <g>
        <path
          d="M10,17.884615384615383Z"
          fill="transparent"
          id="0-line-areaChart_55"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <circle
          cx={10}
          cy={17.884615384615383}
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_55"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          r={6}
          stroke="red"
          strokeWidth={3}
        />
        <g
          clipPath="url(#clip)"
          d="M10,17.884615384615383L10,-35Z"
        >
          <circle
            cx={10}
            cy={17.884615384615383}
            data-is-focusable={true}
            fill="red"
            id="circle57_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_56"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone62"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders enabledLegendsWrapLines correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_28"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone29"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_28"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_28"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle26"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_23"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_23"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle25_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle25_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_24"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div
        aria-label="Legends"
        className=
            ms-FocusZone
            &:focus {
              outline: none;
            }
        data-focuszone-id="FocusZone30"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDownCapture={[Function]}
        role="listbox"
      >
        <div
          className=
              ms-OverflowSet
              {
                display: flex;
                flex-wrap: wrap;
                justify-content: unset;
                position: relative;
              }
          role="group"
        >
          <div
            className=
                ms-OverflowSet-item
                {
                  display: inherit;
                  flex-shrink: 0;
                }
            role="none"
          >
            <button
              aria-label="metaData1 selected"
              aria-posinset={1}
              aria-selected={false}
              aria-setsize={1}
              className=

                  {
                    align-items: center;
                    background: none;
                    border: none;
                    cursor: pointer;
                    display: flex;
                    outline: transparent;
                    padding-bottom: 8px;
                    padding-left: 8px;
                    padding-right: 8px;
                    padding-top: 8px;
                    position: relative;
                    text-transform: capitalize;
                  }
                  &::-moz-focus-inner {
                    border: 0;
                  }
                  .ms-Fabric--isFocusVisible &:focus:after {
                    border: 1px solid transparent;
                    bottom: 1px;
                    content: "";
                    left: 1px;
                    outline: 1px solid #605e5c;
                    position: absolute;
                    right: 1px;
                    top: 1px;
                    z-index: 1;
                  }
                  @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                    outline-color: #605e5c;
                  }
              data-is-focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="option"
            >
              <div
                className=

                    {
                      background-color: red;
                      border-color: red;
                      border: 1px solid;
                      content: ;
                      height: 12px;
                      margin-right: 8px;
                      width: 12px;
                    }
                    @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                      content: linear-gradient(to right, red, red);
                      opacity: ;
                    }
              />
              <div
                className=

                    {
                      -moz-osx-font-smoothing: grayscale;
                      -webkit-font-smoothing: antialiased;
                      color: #323130;
                      font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                      font-size: 12px;
                      font-weight: 400;
                      line-height: 16px;
                      opacity: ;
                    }
              >
                metaData1
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders hideLegend hhh correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_13"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone14"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_13"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_13"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle11"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_8"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_8"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle10_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle10_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_9"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders hideTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_20"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone21"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_20"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_20"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle18"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_15"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_15"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle17_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle17_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_16"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone22"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders showXAxisLablesTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_36"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone37"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_36"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_36"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle34"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_31"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_31"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle33_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle33_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_32"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone38"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders wrapXAxisLables correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_44"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone45"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_44"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_44"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle42"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_39"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_39"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle41_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle41_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_40"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone46"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;

exports[`AreaChart snapShot testing renders yAxisTickFormat correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_52"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone53"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="AreaChart"
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_52"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_52"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle50"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_47"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_47"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle49_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle49_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_48"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone54"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  role="none"
                >
                  <button
                    aria-label="metaData1 selected"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <span
    className="ms-layer"
  />
</div>
`;
