export type FluentOverrideValue =
  | {
      f2Token: string;
      rawValue?: never;
    }
  | {
      f2Token?: never;
      rawValue: string;
    };

export type FluentOverrides = Record<string, FluentOverrideValue | null>;

export const fluentOverrides: FluentOverrides = {
  backgroundCtrlBrandHover: { f2Token: 'colorBrandBackgroundHover' },
  backgroundCtrlBrandPressed: { f2Token: 'colorBrandBackgroundPressed' },
  backgroundCtrlBrandRest: { f2Token: 'colorBrandBackground' },
  backgroundCtrlNeutralDisabled: { f2Token: 'colorNeutralBackgroundDisabled' },
  backgroundCtrlNeutralHover: { f2Token: 'colorNeutralBackground1Hover' },
  backgroundCtrlNeutralPressed: { f2Token: 'colorNeutralBackground1Pressed' },
  backgroundCtrlNeutralRest: { f2Token: 'colorNeutralBackground1' },
  backgroundCtrlOutlineHover: { f2Token: 'colorTransparentBackground' },
  backgroundCtrlOutlinePressed: { f2Token: 'colorTransparentBackground' },
  backgroundCtrlOutlineRest: { f2Token: 'colorTransparentBackground' },
  backgroundCtrlSubtleDisabled: { f2Token: 'colorTransparentBackground' },
  backgroundCtrlSubtleHover: { f2Token: 'colorSubtleBackgroundHover' },
  backgroundCtrlSubtlePressed: { f2Token: 'colorSubtleBackgroundPressed' },
  backgroundCtrlSubtleRest: { f2Token: 'colorSubtleBackground' },
  cornerCircular: { f2Token: 'borderRadiusCircular' },
  cornerCtrlLgRest: { f2Token: 'borderRadiusMedium' }, // Button uses borderRadiusMedium in all sizes
  cornerCtrlRest: { f2Token: 'borderRadiusMedium' },
  cornerCtrlSmRest: { f2Token: 'borderRadiusMedium' }, // Button uses borderRadiusMedium in all sizes
  cornerZero: { f2Token: 'borderRadiusNone' },
  ctrlFocusInnerStroke: { f2Token: 'colorStrokeFocus2' },
  ctrlFocusInnerStrokeWidth: { f2Token: 'strokeWidthThin' },
  ctrlFocusOuterStroke: { f2Token: 'colorTransparentStroke' },
  ctrlFocusOuterStrokeWidth: { f2Token: 'strokeWidthThick' },
  ctrlLinkForegroundBrandHover: { f2Token: 'colorBrandForegroundLinkHover' },
  ctrlLinkForegroundBrandPressed: { f2Token: 'colorBrandForegroundLinkPressed' },
  ctrlLinkForegroundBrandRest: { f2Token: 'colorBrandForegroundLink' },
  ctrlLinkForegroundNeutralHover: { f2Token: 'colorNeutralForeground2Hover' },
  ctrlLinkForegroundNeutralPressed: { f2Token: 'colorNeutralForeground2Pressed' },
  ctrlLinkForegroundNeutralRest: { f2Token: 'colorNeutralForeground2' },
  ctrlProgressBackgroundEmpty: { f2Token: 'colorNeutralBackground6' },
  ctrlProgressBackgroundFilled: { f2Token: 'colorCompoundBrandBackground' },
  ctrlProgressCorner: { f2Token: 'borderRadiusMedium' },
  ctrlProgressHeightEmpty: { rawValue: '2px' },
  ctrlProgressHeightFilled: { rawValue: '100%' },
  ctrlProgressLgHeightEmpty: { rawValue: '4px' },
  ctrlProgressLgHeightFilled: { rawValue: '100%' },
  foregroundContentNeutralPrimary: { f2Token: 'colorNeutralForeground1' },
  foregroundCtrlIconOnNeutralDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlIconOnSubtleDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlIconOnSubtleHover: { f2Token: 'colorNeutralForeground2BrandHover' },
  foregroundCtrlIconOnSubtlePressed: { f2Token: 'colorNeutralForeground2BrandPressed' },
  foregroundCtrlIconOnSubtleRest: { f2Token: 'colorNeutralForeground2' },
  foregroundCtrlNeutralPrimaryDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlNeutralPrimaryHover: { f2Token: 'colorNeutralForeground1Hover' },
  foregroundCtrlNeutralPrimaryPressed: { f2Token: 'colorNeutralForeground1Pressed' },
  foregroundCtrlNeutralPrimaryRest: { f2Token: 'colorNeutralForeground1' },
  foregroundCtrlNeutralSecondaryDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlNeutralSecondaryHover: { f2Token: 'colorNeutralForeground2Hover' },
  foregroundCtrlNeutralSecondaryPressed: { f2Token: 'colorNeutralForeground2Pressed' },
  foregroundCtrlNeutralSecondaryRest: { f2Token: 'colorNeutralForeground2' },
  foregroundCtrlOnBrandHover: { f2Token: 'colorNeutralForegroundOnBrand' },
  foregroundCtrlOnBrandPressed: { f2Token: 'colorNeutralForegroundOnBrand' },
  foregroundCtrlOnBrandRest: { f2Token: 'colorNeutralForegroundOnBrand' },
  foregroundCtrlOnOutlineDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlOnOutlineHover: { f2Token: 'colorNeutralForeground1Hover' },
  foregroundCtrlOnOutlinePressed: { f2Token: 'colorNeutralForeground1Pressed' },
  foregroundCtrlOnOutlineRest: { f2Token: 'colorNeutralForeground1' },
  foregroundCtrlOnSubtleDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlOnSubtleHover: { f2Token: 'colorNeutralForeground2Hover' },
  foregroundCtrlOnSubtlePressed: { f2Token: 'colorNeutralForeground2Pressed' },
  foregroundCtrlOnSubtleRest: { f2Token: 'colorNeutralForeground2' },
  foregroundCtrlOnTransparentDisabled: { f2Token: 'colorNeutralForegroundDisabled' },
  foregroundCtrlOnTransparentHover: { f2Token: 'colorNeutralForeground2BrandHover' },
  foregroundCtrlOnTransparentPressed: { f2Token: 'colorNeutralForeground2BrandPressed' },
  foregroundCtrlOnTransparentRest: { f2Token: 'colorNeutralForeground2' },
  gapInsideCtrlDefault: { f2Token: 'spacingHorizontalSNudge' },
  gapInsideCtrlLgDefault: { f2Token: 'spacingHorizontalSNudge' },
  gapInsideCtrlSmDefault: { f2Token: 'spacingHorizontalXS' },
  paddingCtrlHorizontalDefault: { f2Token: 'spacingHorizontalM' },
  paddingCtrlHorizontalIconOnly: { rawValue: '5px' },
  paddingCtrlLgHorizontalDefault: { f2Token: 'spacingHorizontalL' },
  paddingCtrlLgHorizontalIconOnly: { rawValue: '7px' },
  paddingCtrlSmHorizontalDefault: { f2Token: 'spacingHorizontalS' },
  paddingCtrlSmHorizontalIconOnly: { rawValue: '1px' },
  paddingCtrlTextBottom: { rawValue: '5px' },
  paddingCtrlTextSide: { rawValue: '0px' }, // For now, text padding is not applied (use default);
  paddingCtrlTextTop: { rawValue: '5px' },
  sizeCtrlDefault: { rawValue: '96px' },
  sizeCtrlIcon: { rawValue: '20px' },
  sizeCtrlLgDefault: { rawValue: '96px' },
  sizeCtrlLgIcon: { rawValue: '24px' },
  sizeCtrlSmDefault: { rawValue: '64px' },
  sizeCtrlSmIcon: { rawValue: '20px' },
  statusDangerBackground: { f2Token: 'colorPaletteRedBackground3' },
  statusDangerTintForeground: { f2Token: 'colorPaletteRedForeground3' },
  statusSuccessBackground: { f2Token: 'colorPaletteGreenBackground3' },
  statusWarningBackground: { f2Token: 'colorPaletteDarkOrangeBackground3' },
  strokeCtrlDividerOnBrand: { f2Token: 'colorNeutralStrokeOnBrand' },
  strokeCtrlDividerOnOutline: { f2Token: 'colorNeutralStroke1' },
  strokeCtrlDividerOnSubtle: { rawValue: 'transparent' },
  strokeCtrlOnActiveBrandHover: { f2Token: 'colorStrokeFocus2' },
  strokeCtrlOnActiveBrandRest: { f2Token: 'colorNeutralForegroundOnBrand' },
  strokeCtrlOnBrandDisabled: { rawValue: 'transparent' },
  strokeCtrlOnBrandHover: { rawValue: 'transparent' },
  strokeCtrlOnBrandPressed: { rawValue: 'transparent' },
  strokeCtrlOnBrandRest: { rawValue: 'transparent' },
  strokeCtrlOnNeutralDisabled: { f2Token: 'colorNeutralStrokeDisabled' },
  strokeCtrlOnNeutralHover: { f2Token: 'colorNeutralStroke1Hover' },
  strokeCtrlOnNeutralPressed: { f2Token: 'colorNeutralStroke1Pressed' },
  strokeCtrlOnNeutralRest: { f2Token: 'colorNeutralStroke1' },
  strokeCtrlOnOutlineDisabled: { f2Token: 'colorNeutralStrokeDisabled' },
  strokeCtrlOnOutlineHover: { f2Token: 'colorNeutralStroke1' },
  strokeCtrlOnOutlinePressed: { f2Token: 'colorNeutralStroke1' },
  strokeCtrlOnOutlineRest: { f2Token: 'colorNeutralStroke1' },
  strokeCtrlOnSubtleDisabled: { rawValue: 'transparent' },
  strokeCtrlOnSubtleHover: { rawValue: 'transparent' },
  strokeCtrlOnSubtlePressed: { rawValue: 'transparent' },
  strokeCtrlOnSubtleRest: { rawValue: 'transparent' },
  strokeLayer: { f2Token: 'colorTransparentStroke' },
  strokeWidthCtrlOutlineHover: { f2Token: 'strokeWidthThin' },
  strokeWidthCtrlOutlinePressed: { f2Token: 'strokeWidthThin' },
  strokeWidthCtrlOutlineRest: { f2Token: 'strokeWidthThin' },
  strokeWidthCtrlOutlineSelected: { f2Token: 'strokeWidthThicker' },
  strokeWidthDefault: { f2Token: 'strokeWidthThin' },
  textCtrlButtonWeightDefault: { f2Token: 'fontWeightSemibold' },
  textGlobalBody1FontSize: { f2Token: 'fontSizeBase500' },
  textGlobalBody1LineHeight: { f2Token: 'lineHeightBase500' },
  textGlobalBody2FontSize: { f2Token: 'fontSizeBase400' },
  textGlobalBody2LineHeight: { f2Token: 'lineHeightBase400' },
  textGlobalBody3FontSize: { f2Token: 'fontSizeBase300' },
  textGlobalBody3LineHeight: { f2Token: 'lineHeightBase300' },
  textGlobalCaption1FontSize: { f2Token: 'fontSizeBase200' },
  textGlobalCaption1LineHeight: { f2Token: 'lineHeightBase200' },
  textGlobalCaption2FontSize: { f2Token: 'fontSizeBase100' },
  textGlobalCaption2LineHeight: { f2Token: 'lineHeightBase100' },
  textGlobalDisplay2FontSize: { f2Token: 'fontSizeHero1000' },
  textGlobalDisplay2LineHeight: { f2Token: 'lineHeightHero1000' },
  textGlobalSubtitle1FontSize: { f2Token: 'fontSizeHero700' },
  textGlobalSubtitle1LineHeight: { f2Token: 'lineHeightHero700' },
  textGlobalSubtitle2FontSize: { f2Token: 'fontSizeBase600' },
  textGlobalSubtitle2LineHeight: { f2Token: 'lineHeightBase600' },
  textGlobalTitle1FontSize: { f2Token: 'fontSizeHero900' },
  textGlobalTitle1LineHeight: { f2Token: 'lineHeightHero900' },
  textGlobalTitle2FontSize: { f2Token: 'fontSizeHero800' },
  textGlobalTitle2LineHeight: { f2Token: 'lineHeightHero800' },
  textRampItemBodyFontSize: { f2Token: 'fontSizeBase300' },
  textRampItemBodyLineHeight: { f2Token: 'lineHeightBase300' },
  textRampLgItemBodyFontSize: { f2Token: 'fontSizeBase400' },
  textRampLgItemBodyLineHeight: { f2Token: 'lineHeightBase400' },
  textRampSmItemBodyFontSize: { f2Token: 'fontSizeBase200' },
  textRampSmItemBodyLineHeight: { f2Token: 'lineHeightBase200' },
  textStyleDefaultRegularFontFamily: { f2Token: 'fontFamilyBase' },
  textStyleDefaultRegularWeight: { f2Token: 'fontWeightRegular' },
};
