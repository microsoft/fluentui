// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LineChart - mouse events Should render callout correctly on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M34.5 115.625
     A5.5 5.5 0 1 0 45.5 115.625
     M34.5 115.625
     A 5.5 5.5 0 1 1 45.5 115.625
     "
            data-is-focusable={true}
            fill="#ffffff"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <Suspense
    fallback={
      <div>
        Loading...
      </div>
    }
  >
    <div
      className=
          ms-Callout-container
          {
            position: relative;
          }
    >
      <div
        className=
            ms-Callout
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              border-radius: 2px;
              box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
              box-sizing: border-box;
              display: flex;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              outline: transparent;
              position: absolute;
              z-index: 1000000;
            }
            @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
              border-color: WindowText;
              border-style: solid;
              border-width: 1px;
            }
            &::-moz-focus-inner {
              border: 0px;
            }
            {
              animation-duration: 0.367s;
              animation-fill-mode: both;
              animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:translate3d(0,-10px,0);pointer-events:none;}to{transform:translate3d(0,0,0);pointer-events:auto;};
              animation-timing-function: cubic-bezier(.1,.9,.2,1);
            }
        data-is-focusable={true}
        hidden={false}
        id="toolTipcircle0_0_1"
        style={
          Object {
            "left": 8,
            "maxHeight": 745,
            "top": 15,
          }
        }
        tabIndex={-1}
      >
        <div
          className=
              ms-Callout-main
              {
                background-color: #ffffff;
                border-radius: 2px;
                overflow-x: hidden;
                overflow-y: auto;
                position: relative;
                width: 100%;
              }
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "maxHeight": "100%",
              "outline": "none",
              "overflowY": undefined,
            }
          }
        >
          <div
            className=

                {
                  background-blend-mode: normal, luminosity;
                  background-color: #ffffff;
                  display: grid;
                  overflow: hidden;
                  padding-bottom: 10px;
                  padding-left: 16px;
                  padding-right: 16px;
                  padding-top: 11px;
                }
          >
            <div
              className=

                  {
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;
                  }
              style={Object {}}
            >
              <div
                className=

                    {
                      -moz-osx-font-smoothing: grayscale;
                      -webkit-font-smoothing: antialiased;
                      color: #605e5c;
                      font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                      font-size: 12px;
                      font-weight: 400;
                      line-height: 16px;
                      opacity: 0.8;
                    }
                data-is-focusable={false}
                role="text"
              >
                20
              </div>
            </div>
            <div
              style={Object {}}
            >
              <div
                data-is-focusable={false}
                key="callout-content-0"
                role="text"
                style={Object {}}
              >
                <div
                  style={Object {}}
                >
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          border-left: 4px solid red;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 16px;
                          font-weight: 400;
                          margin-top: 13px;
                          padding-left: 8px;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                          forced-color-adjust: none;
                        }
                    id="0_50"
                  >
                    <div>
                      <div
                        className=

                            {
                              -moz-osx-font-smoothing: grayscale;
                              -webkit-font-smoothing: antialiased;
                              color: #605e5c;
                              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                              font-size: 12px;
                              font-weight: 400;
                              line-height: 16px;
                            }
                            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& {
                              color: rgb(255, 255, 255);
                            }
                      >
                         
                        metaData1
                      </div>
                      <div
                        className=

                            {
                              -moz-osx-font-smoothing: grayscale;
                              -webkit-font-smoothing: antialiased;
                              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                              font-size: 16px;
                              font-weight: bold;
                              line-height: 22px;
                            }
                            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& {
                              color: rgb(255, 255, 255);
                            }
                      >
                        50
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Suspense>
</div>
`;

exports[`LineChart - mouse events Should render customized callout on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M34.5 115.625
     A5.5 5.5 0 1 0 45.5 115.625
     M34.5 115.625
     A 5.5 5.5 0 1 1 45.5 115.625
     "
            data-is-focusable={true}
            fill="#ffffff"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <Suspense
    fallback={
      <div>
        Loading...
      </div>
    }
  >
    <div
      className=
          ms-Callout-container
          {
            position: relative;
          }
    >
      <div
        className=
            ms-Callout
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              border-radius: 2px;
              box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
              box-sizing: border-box;
              display: flex;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              outline: transparent;
              position: absolute;
              z-index: 1000000;
            }
            @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
              border-color: WindowText;
              border-style: solid;
              border-width: 1px;
            }
            &::-moz-focus-inner {
              border: 0px;
            }
            {
              animation-duration: 0.367s;
              animation-fill-mode: both;
              animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:translate3d(0,-10px,0);pointer-events:none;}to{transform:translate3d(0,0,0);pointer-events:auto;};
              animation-timing-function: cubic-bezier(.1,.9,.2,1);
            }
        data-is-focusable={true}
        hidden={false}
        id="toolTipcircle0_0_1"
        style={
          Object {
            "left": 8,
            "maxHeight": 745,
            "top": 15,
          }
        }
        tabIndex={-1}
      >
        <div
          className=
              ms-Callout-main
              {
                background-color: #ffffff;
                border-radius: 2px;
                overflow-x: hidden;
                overflow-y: auto;
                position: relative;
                width: 100%;
              }
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "maxHeight": "100%",
              "outline": "none",
              "overflowY": undefined,
            }
          }
        >
          <div>
            <pre>
              {
  "x": 20,
  "values": [
    {
      "legend": "metaData1",
      "y": 50,
      "color": "red",
      "index": -1
    }
  ]
}
            </pre>
          </div>
        </div>
      </div>
    </div>
  </Suspense>
</div>
`;

exports[`LineChart - mouse events Should render customized callout per stack on mouseover 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M34.5 115.625
     A5.5 5.5 0 1 0 45.5 115.625
     M34.5 115.625
     A 5.5 5.5 0 1 1 45.5 115.625
     "
            data-is-focusable={true}
            fill="#ffffff"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <Suspense
    fallback={
      <div>
        Loading...
      </div>
    }
  >
    <div
      className=
          ms-Callout-container
          {
            position: relative;
          }
    >
      <div
        className=
            ms-Callout
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              border-radius: 2px;
              box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
              box-sizing: border-box;
              display: flex;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              outline: transparent;
              position: absolute;
              z-index: 1000000;
            }
            @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
              border-color: WindowText;
              border-style: solid;
              border-width: 1px;
            }
            &::-moz-focus-inner {
              border: 0px;
            }
            {
              animation-duration: 0.367s;
              animation-fill-mode: both;
              animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:translate3d(0,-10px,0);pointer-events:none;}to{transform:translate3d(0,0,0);pointer-events:auto;};
              animation-timing-function: cubic-bezier(.1,.9,.2,1);
            }
        data-is-focusable={true}
        hidden={false}
        id="toolTipcircle0_0_1"
        style={
          Object {
            "left": 8,
            "maxHeight": 745,
            "top": 15,
          }
        }
        tabIndex={-1}
      >
        <div
          className=
              ms-Callout-main
              {
                background-color: #ffffff;
                border-radius: 2px;
                overflow-x: hidden;
                overflow-y: auto;
                position: relative;
                width: 100%;
              }
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "maxHeight": "100%",
              "outline": "none",
              "overflowY": undefined,
            }
          }
        >
          <div>
            <pre>
              {
  "x": 20,
  "values": [
    {
      "legend": "metaData1",
      "y": 50,
      "color": "red",
      "index": -1
    }
  ]
}
            </pre>
          </div>
        </div>
      </div>
    </div>
  </Suspense>
</div>
`;

exports[`LineChart snapShot testing Should render with default colors when line color is not provided 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="#637cef"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="#637cef"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="#637cef"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="#637cef"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="#637cef"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: #637cef;
                            border-color: #637cef;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, #637cef, #637cef);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders LineChart correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders enabledLegendsWrapLines correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div
        aria-label="Legends"
        aria-multiselectable={false}
        className=
            ms-FocusZone
            &:focus {
              outline: none;
            }
        data-focuszone-id="FocusZone12"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDownCapture={[Function]}
        role="listbox"
      >
        <div
          className=
              ms-OverflowSet
              {
                display: flex;
                flex-wrap: wrap;
                justify-content: unset;
                position: relative;
              }
          role="group"
        >
          <div
            className=
                ms-OverflowSet-item
                {
                  display: inherit;
                  flex-shrink: 0;
                }
            key="0"
            role="none"
          >
            <button
              aria-label="metaData1"
              aria-posinset={1}
              aria-selected={false}
              aria-setsize={1}
              className=

                  {
                    align-items: center;
                    background: none;
                    border: none;
                    cursor: pointer;
                    display: flex;
                    outline: transparent;
                    padding-bottom: 8px;
                    padding-left: 8px;
                    padding-right: 8px;
                    padding-top: 8px;
                    position: relative;
                    text-transform: capitalize;
                  }
                  &::-moz-focus-inner {
                    border: 0;
                  }
                  .ms-Fabric--isFocusVisible &:focus:after {
                    border: 1px solid transparent;
                    bottom: 1px;
                    content: "";
                    left: 1px;
                    outline: 1px solid #605e5c;
                    position: absolute;
                    right: 1px;
                    top: 1px;
                    z-index: 1;
                  }
                  @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                    outline-color: #605e5c;
                  }
              data-is-focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="option"
            >
              <div
                className=

                    {
                      background-color: red;
                      border-color: red;
                      border: 1px solid;
                      content: ;
                      height: 12px;
                      margin-right: 8px;
                      width: 12px;
                    }
                    @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                      content: linear-gradient(to right, red, red);
                      opacity: ;
                    }
              />
              <div
                className=

                    {
                      -moz-osx-font-smoothing: grayscale;
                      -webkit-font-smoothing: antialiased;
                      color: #323130;
                      font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                      font-size: 12px;
                      font-weight: 400;
                      line-height: 16px;
                      opacity: ;
                    }
              >
                metaData1
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders hideLegend correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={350}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 315)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={350}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={130.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 130.625
     A0.5 0.5 0 1 0 40.5 130.625
     M39.5 130.625
     A 0.5 0.5 0 1 1 40.5 130.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders hideTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders showXAxisLablesTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders wrapXAxisLables correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={140}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={120}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M119.5 20
     A0.5 0.5 0 1 0 120.5 20
     M119.5 20
     A 0.5 0.5 0 1 1 120.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={120}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                        :host(.ms-Fabric--isFocusVisible) &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){:host(.ms-Fabric--isFocusVisible) &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders yAxisTickFormat correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_9"
  onMouseLeave={[Function]}
  role="presentation"
>
  <div
    id="defaultTabbableElement_10"
  />
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
        {
          overflow: auto;
        }
    data-focuszone-id="FocusZone11"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      aria-label="LineChart"
      height={310}
      style={
        Object {
          "display": "block",
        }
      }
      width={100}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_9"
        transform="translate(0, 275)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 600;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_9"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine3"
          stroke="#323130"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={310}
        />
        <g>
          <line
            id="lineID1_0_1"
            key="lineID1_0_1"
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={80}
            y1={115.625}
            y2={20}
          />
          <path
            aria-label="20. metaData1, 50."
            d="M39.5 115.625
     A0.5 0.5 0 1 0 40.5 115.625
     M39.5 115.625
     A 0.5 0.5 0 1 1 40.5 115.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_1"
            key="circle0_0_1"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <path
            aria-label="40. metaData1, 80."
            d="M79.5 20
     A0.5 0.5 0 1 0 80.5 20
     M79.5 20
     A 0.5 0.5 0 1 1 80.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0_0_11L"
            key="circle0_0_11L"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            role="img"
            stroke="red"
            strokeWidth={4}
          />
          <circle
            cx={80}
            cy={20}
            focusable={false}
            id="circle0_0_11D"
            key="circle0_0_11D"
            onBlur={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={0}
            r={8}
            role="none"
            strokeWidth={0}
            width={0}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              aria-label="Legends"
              aria-multiselectable={false}
              className=
                  ms-FocusZone
                  &:focus {
                    outline: none;
                  }
              data-focuszone-id="FocusZone12"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet
                    {
                      display: flex;
                      flex-wrap: wrap;
                      justify-content: unset;
                      position: relative;
                    }
                role="group"
              >
                <div
                  className=
                      ms-OverflowSet-item
                      {
                        display: inherit;
                        flex-shrink: 0;
                      }
                  key="0"
                  role="none"
                >
                  <button
                    aria-label="metaData1"
                    aria-posinset={1}
                    aria-selected={false}
                    aria-setsize={1}
                    className=

                        {
                          align-items: center;
                          background: none;
                          border: none;
                          cursor: pointer;
                          display: flex;
                          outline: transparent;
                          padding-bottom: 8px;
                          padding-left: 8px;
                          padding-right: 8px;
                          padding-top: 8px;
                          position: relative;
                          text-transform: capitalize;
                        }
                        &::-moz-focus-inner {
                          border: 0;
                        }
                        .ms-Fabric--isFocusVisible &:focus:after {
                          border: 1px solid transparent;
                          bottom: 1px;
                          content: "";
                          left: 1px;
                          outline: 1px solid #605e5c;
                          position: absolute;
                          right: 1px;
                          top: 1px;
                          z-index: 1;
                        }
                        @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                          outline-color: #605e5c;
                        }
                    data-is-focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    role="option"
                  >
                    <div
                      className=

                          {
                            background-color: red;
                            border-color: red;
                            border: 1px solid;
                            content: ;
                            height: 12px;
                            margin-right: 8px;
                            width: 12px;
                          }
                          @media screen and (-ms-high-contrast: active), screen and (forced-colors: active){& {
                            content: linear-gradient(to right, red, red);
                            opacity: ;
                          }
                    />
                    <div
                      className=

                          {
                            -moz-osx-font-smoothing: grayscale;
                            -webkit-font-smoothing: antialiased;
                            color: #323130;
                            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                            font-size: 12px;
                            font-weight: 400;
                            line-height: 16px;
                            opacity: ;
                          }
                    >
                      metaData1
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
