// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HoverCard renders ExpandingCard correctly 1`] = `
<span
  className="ms-layer"
>
  <div
    className=
        ms-Fabric
        ms-Layer-content
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          color: #323130;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          visibility: visible;
        }
        & button {
          font-family: inherit;
        }
        & input {
          font-family: inherit;
        }
        & textarea {
          font-family: inherit;
        }
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onContextMenu={[Function]}
    onDoubleClick={[Function]}
    onDrag={[Function]}
    onDragEnd={[Function]}
    onDragEnter={[Function]}
    onDragExit={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onInput={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    onMouseUp={[Function]}
    onSubmit={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
  >
    <div
      className=
          ms-Callout-container
          {
            position: relative;
          }
    >
      <div
        className=
            ms-Callout
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              border-radius: 2px;
              box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
              box-sizing: border-box;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              outline: transparent;
              position: absolute;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
              border-color: WindowText;
              border-style: solid;
              border-width: 1px;
            }
            &::-moz-focus-inner {
              border: 0px;
            }
        style={
          Object {
            "filter": "opacity(0)",
            "opacity": 0,
            "pointerEvents": "none",
          }
        }
        tabIndex={-1}
      >
        <div
          className=
              ms-Callout-main
              {
                background-color: #ffffff;
                border-radius: 2px;
                overflow-x: hidden;
                overflow-y: hidden;
                position: relative;
              }
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "maxHeight": undefined,
              "outline": "none",
              "overflowY": "hidden",
            }
          }
        >
          <div
            onBlurCapture={[Function]}
            onFocusCapture={[Function]}
          >
            <div
              aria-hidden={true}
              data-is-visible={true}
              style={
                Object {
                  "pointerEvents": "none",
                  "position": "fixed",
                }
              }
              tabIndex={0}
            />
            <div
              onKeyDown={[Function]}
            >
              <div>
                <div>
                  TEST
                </div>
              </div>
              <div>
                <div>
                  <div>
                    TEST
                  </div>
                </div>
              </div>
            </div>
            <div
              aria-hidden={true}
              data-is-visible={true}
              style={
                Object {
                  "pointerEvents": "none",
                  "position": "fixed",
                }
              }
              tabIndex={0}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</span>
`;

exports[`HoverCard renders PlainCard correctly 1`] = `
<span
  className="ms-layer"
>
  <div
    className=
        ms-Fabric
        ms-Layer-content
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          color: #323130;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          visibility: visible;
        }
        & button {
          font-family: inherit;
        }
        & input {
          font-family: inherit;
        }
        & textarea {
          font-family: inherit;
        }
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onContextMenu={[Function]}
    onDoubleClick={[Function]}
    onDrag={[Function]}
    onDragEnd={[Function]}
    onDragEnter={[Function]}
    onDragExit={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onInput={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    onMouseUp={[Function]}
    onSubmit={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
  >
    <div
      className=
          ms-Callout-container
          {
            position: relative;
          }
    >
      <div
        className=
            ms-Callout
            {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              border-radius: 2px;
              box-shadow: 0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108);
              box-sizing: border-box;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 14px;
              font-weight: 400;
              outline: transparent;
              position: absolute;
            }
            @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
              border-color: WindowText;
              border-style: solid;
              border-width: 1px;
            }
            &::-moz-focus-inner {
              border: 0px;
            }
        style={
          Object {
            "filter": "opacity(0)",
            "opacity": 0,
            "pointerEvents": "none",
          }
        }
        tabIndex={-1}
      >
        <div
          className=
              ms-Callout-main
              {
                background-color: #ffffff;
                border-radius: 2px;
                overflow-x: hidden;
                overflow-y: auto;
                position: relative;
              }
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "maxHeight": undefined,
              "outline": "none",
              "overflowY": undefined,
            }
          }
        >
          <div
            onBlurCapture={[Function]}
            onFocusCapture={[Function]}
          >
            <div
              aria-hidden={true}
              data-is-visible={true}
              style={
                Object {
                  "pointerEvents": "none",
                  "position": "fixed",
                }
              }
              tabIndex={0}
            />
            <div
              onKeyDown={[Function]}
            >
              <div
                style={
                  Object {
                    "height": "500px",
                    "width": "200px",
                  }
                }
              >
                TEST
              </div>
            </div>
            <div
              aria-hidden={true}
              data-is-visible={true}
              style={
                Object {
                  "pointerEvents": "none",
                  "position": "fixed",
                }
              }
              tabIndex={0}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</span>
`;

exports[`HoverCard renders target wrapped by HoverCard correctly 1`] = `
<div
  data-is-focusable={true}
>
  Content
</div>
`;
