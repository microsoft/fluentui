pr:
  - master

# There's a separate pipeline for CI which also uses this file, but with a trigger override in the UI
# https://dev.azure.com/uifabric/fabricpublic/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=164&view=Tab_Triggers
trigger: none

variables:
  - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/')) }}:
      - name: sinceArg
        value: --since $(targetBranch)

  - template: .devops/templates/variables.yml

pool: '1ES-Host-Ubuntu'

jobs:
  - job: TestVRTool
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - bash: |
          postPolicy="true";
          response=$(curl --request POST 'https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/token' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' --data-urlencode 'client_id=288a69b6-760d-4c1f-ad6d-0183b5e5740f' --data-urlencode 'client_secret='${VR_APPROVAL_CLIENT_SECRET} )
            parsedResponse=${response/*"access_token"/}
            token=${parsedResponse:3:${#parsedResponse}-5}
            curl --location --request POST 'https://vrt-fluentapp.azurewebsites.net/api/policyState' \
            --header 'Authorization: Bearer '"$token" \
            --header 'Content-Type: application/json' \
            --data-raw '	{
            "organization": "office",
            "projectName": "Office",
            "prId": 10,
            "commitId": "$(Build.SourceVersion)",
              "generate":true,
              "blockingPipeline":{
              },
              "nonBlockingPipeline":{
                "15438": {
                  "pipelineStatus": "PENDING",
                  "pipelineName": "fluent-ui VRT Pipeline"
                }
              },
              "postPolicy": '${postPolicy}',
              "policyType": "OPTIONAL"
            }'
        displayName: 'Call policy State Api'
        env:
          VR_APPROVAL_CLIENT_SECRET: $(VR-APPROVAL-CLIENT-SECRET)

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn (install packages)

      - script: |
          yarn workspace @fluentui/vr-tests-react-components screener:build
        displayName: Build vr tests components package

      - script: |
          yarn lage test:component --verbose
        displayName: 'Run VR tests'

      - script: |
          mkdir -p screenshots
          cp -rf apps/vr-tests-react-components/dist/screenshots/*.png screenshots/
          cd screenshots
          for file in *"\""*; do
            echo $file
            mv -- "$file" "${file//\"/}"
          done

          for file in *"<"*; do
            echo $file
            mv -- "$file" "${file//</ }"
          done

          for file in *">"*; do
            echo $file
            mv -- "$file" "${file//>/ }"
          done
        displayName: Collate Artifacts

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: 'screenshots'
          ArtifactName: 'vrscreenshot'
          publishLocation: 'Container'

      - bash: node packages/oouibot-screenshotdiff/lib/index.js ${{ parameters.buildType }} --clientType cloudtest --buildId $(Build.BuildId)
        displayName: 'Run fluentui-screenshotdiff'

      - template: .devops/templates/cleanup.yml
