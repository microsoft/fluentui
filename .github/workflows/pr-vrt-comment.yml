name: VRT CI | Comment on PR
on:
  workflow_run:
    workflows: ['VRT PR']
    types:
      - completed

env:
  NX_PARALLEL: 4 # ubuntu-latest = 4-core CPU / 16 GB of RAM | macos-14-xlarge (arm) = 6-core CPU / 14 GB of RAM
  NX_PREFER_TS_NODE: true
  NX_VERBOSE_LOGGING: true

jobs:
  run_vr_diff:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'microsoft' }} && ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success' }}
    outputs:
      pr_number: ${{ steps.pr_number.outputs.result }}
    permissions:
      # necessary to write comments to the PR from the vr-approval-cli
      pull-requests: write
      id-token: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github

      # downloaded artifacts will contain screenshots from affected project including 'screenshots-report.json' which contains proper image mappings for affected project
      # - see @{link file://./../scripts/prepare-vr-screenshots-for-upload.js#43}
      # - see @{link file://./pr-vrt.yml#56}

      - uses: actions/download-artifact@v4
        with:
          name: vrscreenshot
          path: ./screenshots
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Save metadata
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const data = {
              GITHUB_RUN_ID: context.payload.workflow_run.id,
              GITHUB_REF: `refs/pull/${context.payload.workflow_run.pull_requests[0].number}/merge`,

              GITHUB_SHA: context.payload.workflow_run.pull_requests[0].head.sha,
              GITHUB_HEAD_REF: context.payload.workflow_run.pull_requests[0].head.ref,

              GITHUB_REPOSITORY: context.payload.workflow_run.repository.full_name,

              GITHUB_BASE_REF: context.payload.workflow_run.pull_requests[0].base.ref,
              GITHUB_WORKFLOW: context.payload.workflow_run.name
            };

            console.log("Metadata", data);

            fs.writeFileSync('metadata.json', JSON.stringify(data, null, 2));

      - name: Login via Azure CLI
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          client-id: ${{ secrets.AZURE_VRT_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run vr diff
        env:
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRINCIPAL_CLIENT_ID: ${{ secrets.AZURE_VRT_CLIENT_ID }}
        run: |

          # Read metadata from the results directory
          if [ -f ./metadata.json ]; then
            # Extract values from metadata.json and set them as environment variables
            export GITHUB_RUN_ID=$(jq -r '.GITHUB_RUN_ID' ./metadata.json)
            export GITHUB_SHA=$(jq -r '.GITHUB_SHA' ./metadata.json)
            export GITHUB_REF=$(jq -r '.GITHUB_REF' ./metadata.json)
            export GITHUB_HEAD_REF=$(jq -r '.GITHUB_HEAD_REF' ./metadata.json)
            export GITHUB_REPOSITORY=$(jq -r '.GITHUB_REPOSITORY' ./metadata.json)
            export GITHUB_REPOSITORY_OWNER=$(jq -r '.GITHUB_REPOSITORY_OWNER' ./metadata.json)
            export GITHUB_BASE_REF=$(jq -r '.GITHUB_BASE_REF' ./metadata.json)
            export GITHUB_WORKFLOW=$(jq -r '.GITHUB_WORKFLOW' ./metadata.json)
          else
            echo "Error: metadata.json not found"
            exit 1
          fi

          npx vr-approval-cli@1.0.0-test.1742371346259 create-policy \
            --nonBlockingPipelines '{"301":{"pipelineStatus": "PENDING","pipelineName": "Fluent UI"}}' \
            --clientType FLUENTUI


          npx vr-approval-cli@1.0.0-test.1742371346259 run-diff \
            --screenshotsDirectory ./screenshots \
            --buildType pr \
            --ciDefinitionId 'vrt-baseline.yml' \
            --clientType "FLUENTUI" \
            --groupName "Fluent UI" \
            --locationPrefix 'fluentui-github' \
            --locationPostfix 'vrscreenshots-github' \
            --threshold '0.04' \
            --pipelineId '301' \
            --cumThreshold '1'
