name: Screener run
on:
  workflow_run:
    workflows:
      - Screener build
    types:
      - completed

env:
  AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}
jobs:
  determine-if-skipping:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Download artifact to determine if skipping jobs
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: skip-screener

      - name: Define env variable
        run: |
          var=$(head -1 skip-screener)
          echo "$var" >> $GITHUB_ENV
    outputs:
      SKIP_SCREENER: ${{env.SKIP_SCREENER}}

  screener-react-northstar:
    if: needs.determine-if-skipping.outputs.SKIP_SCREENER == ''
    needs: determine-if-skipping
    runs-on: 'ubuntu-latest'
    name: Screener @fluentui/react-northstar
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 14.18.1
          cache: 'yarn'

      - name: Check if test app artifact deployed
        uses: actions/github-script@v6
        id: skip-screener
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,

            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "northstar-artifact"
            })[0];
            core.exportVariable('IS_ARTIFACT_PRESENT', (matchArtifact !== undefined).toString());

      - name: Download environment variables artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: env-artifact

      - name: Download N* storybook artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: northstar-artifact
          # downloads artifact to where it would be 'built'
          path: packages/fluentui/docs/dist
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Define env variables
        run: |
          input_file="environment"
          while read line
          do
          echo "$line" >> $GITHUB_ENV
          done < "$input_file"

      - name: Log environment variables (Linux)
        if: runner.os == 'Linux'
        run: |
          printenv | sort ;\
          echo "SHELLOPTS $SHELLOPTS" ;\

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Upload N* VR test site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d '$web/${{env.DEPLOYBASEPATH}}/react-northstar-screener' -s 'packages/fluentui/docs/dist' --overwrite
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Start @fluentui/react-northstar VR Test
        run: yarn workspace @fluentui/docs vr:test
        env:
          SCREENER_ENDPOINT: ${{secrets.SCREENER_ENDPOINT}}
          SCREENER_PROXY_ENDPOINT: ${{secrets.SCREENER_PROXY_ENDPOINT}}
          SCREENER_API_KEY: ${{secrets.SCREENER_API_KEY}}

  screener-react:
    if: needs.determine-if-skipping.outputs.SKIP_SCREENER == ''
    needs: determine-if-skipping
    runs-on: 'ubuntu-latest'
    name: Screener @fluentui/react
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 14.18.1
          cache: 'yarn'

      - name: Check if test app artifact deployed
        uses: actions/github-script@v6
        id: skip-screener
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "screener-artifact"
            })[0];
            core.exportVariable('IS_ARTIFACT_PRESENT', (matchArtifact !== undefined).toString());

      - name: Download environment variables artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: env-artifact

      - name: Download screener storybook artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: screener-artifact
          path: apps/vr-tests/dist/storybook
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Define env variables
        run: |
          input_file="environment"
          while read line
          do
          echo "$line" >> $GITHUB_ENV
          done < "$input_file"

      - name: Log environment variables (Linux)
        if: runner.os == 'Linux'
        run: |
          printenv | sort ;\
          echo "SHELLOPTS $SHELLOPTS" ;\

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Upload @fluentui/react VR test site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d '$web/${{env.DEPLOYBASEPATH}}/react-screener' -s 'apps/vr-tests/dist/storybook' --overwrite
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Start @fluentui/react VR Test
        run: yarn workspace @fluentui/vr-tests screener
        env:
          SCREENER_ENDPOINT: ${{secrets.SCREENER_ENDPOINT}}
          SCREENER_PROXY_ENDPOINT: ${{secrets.SCREENER_PROXY_ENDPOINT}}
          SCREENER_API_KEY: ${{secrets.SCREENER_API_KEY}}

  screener-react-components:
    if: needs.determine-if-skipping.outputs.SKIP_SCREENER == ''
    needs: determine-if-skipping
    runs-on: 'ubuntu-latest'
    name: Screener @fluentui/react-components
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 14.18.1
          cache: 'yarn'

      - name: Check if test app artifact deployed
        uses: actions/github-script@v6
        id: skip-screener
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "vnext-artifact"
            })[0];
            core.exportVariable('IS_ARTIFACT_PRESENT', (matchArtifact !== undefined).toString());

      - name: Download environment variables artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: env-artifact

      - name: Download VNext storybook artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: screener-build.yml
          run_id: ${{github.event.workflow_run.id}}
          name: vnext-artifact
          path: apps/vr-tests-react-components/dist/storybook
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Define env variables
        run: |
          input_file="environment"
          while read line
          do
          echo "$line" >> $GITHUB_ENV
          done < "$input_file"

      - name: Log environment variables (Linux)
        if: runner.os == 'Linux'
        run: |
          printenv | sort ;\
          echo "SHELLOPTS $SHELLOPTS" ;\

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Upload @fluentui/react-components VR test site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d '$web/${{env.DEPLOYBASEPATH}}/react-components-screener' -s 'apps/vr-tests-react-components/dist/storybook' --overwrite
        if: ${{ env.IS_ARTIFACT_PRESENT == 'true' }}

      - name: Start @fluentui/react-components VR Test
        run: yarn workspace @fluentui/vr-tests-react-components screener
        env:
          SCREENER_ENDPOINT: ${{secrets.SCREENER_ENDPOINT}}
          SCREENER_PROXY_ENDPOINT: ${{secrets.SCREENER_PROXY_ENDPOINT}}
          SCREENER_API_KEY: ${{secrets.SCREENER_API_KEY}}
